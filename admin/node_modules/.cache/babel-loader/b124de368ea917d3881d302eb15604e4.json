{"ast":null,"code":"var _jsxFileName = \"/Users/mac/dev/store2/admin/src/products/productEditForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Col, Collapse, Button, Spinner } from 'react-bootstrap';\nimport { getAllTags, addProduct, editProduct } from './../services/productService';\nimport { getAllCategory, getAllSubCategory } from './../services/categoryService';\nimport { BsTrashFill } from \"react-icons/bs\"; // import { VariantForm } from './variantForm'\n// import MaterialTable from 'material-table'\n\nimport { addTag } from './../services/tagService';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductForm = props => {\n  _s();\n\n  const styles = {\n    margin: \"20px 50px\"\n  };\n  const [open, setOpen] = useState(false); // const columns = [{ title: \"Color\", field: 'color' },\n  // { title: \"Size\", field: 'size' },\n  // { title: \"Price\", field: 'price' },\n  // { title: \"Stock\", field: 'stock' },\n  // ]\n\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  const handleCloseSnack = () => {\n    setSnackBarOpen(false);\n  }; // const [editImage, setEditImage] = useState([])\n  // const [editVariant, setEditVariant] = useState({})\n  // const [isVariantEdit, setIsVariantEdit] = useState(false)\n  // const [modalShow, setModalShow] = React.useState(false);\n\n\n  const [gallery, setGallery] = useState([]);\n  const [tag, setTag] = useState([]);\n  const [tagNew, setTagNew] = useState([]);\n  const [tagInput, setTagInput] = useState('');\n  const [subCategory, setSubCategory] = useState(null);\n  const [category, setCategory] = useState(null); // const [variant, setVariant] = useState([])\n  // const [variantId, setVariantId] = useState([])\n\n  const [formf, setForm] = useState({\n    url: ''\n  });\n  const [isEdit, setIsEdit] = useState(false);\n  const [tagId, setTagId] = useState([]);\n  const [nullTag, setNullTag] = useState(false);\n  const [tagRequired, setTagRequired] = useState(false); // const {edit} = props.location.state\n\n  const getValues = async () => {\n    try {\n      const category = await getAllCategory();\n      setCategory(category);\n      const tag = await getAllTags();\n\n      if (props.location.state) {\n        setTagId(props.location.state.tagId); //const data = await tag.filter(item => {\n        //    return props.location.state.tagId.indexOf(item._id) === -1\n        //})\n        //setTag(data)\n      } else {\n        setTag(tag);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (!props.location.state) {\n      setIsEdit(false);\n    } else {\n      setForm(props.location.state); // setVariant(props.location.state.variants)\n\n      console.log(props.location.state);\n      setTagNew(props.location.state.tags);\n      setSub(props.location.state.category);\n      setGallery(props.location.state.gallery);\n      setIsEdit(true);\n    }\n  };\n\n  useEffect(() => {\n    getValues(); // setVariantRequired(false)\n\n    setTagRequired(false);\n    setValidated(false);\n    setStoreError(false); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // const tageditor=async(data)=>{\n  //    setTag(data)\n  // }\n  // const dataChooser = () => {\n  //     return variant\n  // }\n\n  const setSub = async value => {//const data = await getAllSubCategory(value)\n    //    console.log('-----------',data)\n    //    setSubCategory(data)\n  };\n\n  const setField = async (field, value) => {\n    if (field === 'category') {\n      console.log('foreds', field, value);\n      setSub(value);\n    }\n\n    setForm({ ...formf,\n      [field]: value\n    });\n  };\n\n  const tagEvent = e => {\n    setTagInput(e);\n    setNullTag(false);\n  };\n\n  const setImgArray = () => {\n    if (formf.url !== '') {\n      console.log(formf.url);\n      setGallery([...gallery, formf.url]);\n      setForm({ ...formf,\n        url: ''\n      });\n    }\n  };\n\n  const view = () => {\n    console.log('newtag', tagNew);\n    console.log('tagid', tagId);\n    console.log('----', formf);\n    console.log('oldtag', tag);\n    console.log(gallery);\n  }; // const ss = (data) => {\n  //     setVariantRequired(false)\n  //     setVariant(\n  //         data\n  //     )\n  //     setModalShow(false)\n  // }\n  // const s = (data) => {\n  //     setVariantRequired(false)\n  //     console.log('Saved',data)\n  //     setVariant([\n  //         ...variant,\n  //         data\n  //     ])\n  //     setVariantId([\n  //         ...variantId,\n  //         data._id])\n  //     setModalShow(false)\n  // }\n\n\n  const addTagHandler = async () => {\n    if (tagInput !== '') {\n      const data = await addTag(tagInput, false);\n      setTagNew([...tagNew, data]);\n      console.log(\"New Tag\", data);\n      setTagId([...tagId, data._id]);\n      setTagInput('');\n      setNullTag(false);\n    } else {\n      setNullTag(true);\n    }\n  };\n\n  const reduceTag = id => {\n    setTagId([...tagId, id]);\n    setTag(tag.filter(item => item._id !== id));\n  };\n\n  const popTag = id => {\n    setTagId(tagId.filter(item => item !== id));\n    setTagNew(tagNew.filter(item => item._id !== id));\n  };\n\n  const [validated, setValidated] = useState(false);\n  const [storeError, setStoreError] = useState(false); // const [variantRequired, setVariantRequired] = useState(false)\n\n  const handleSubmit = async event => {\n    const form = event.currentTarget;\n    console.log(tagId.length !== 0);\n\n    if (tagId.length !== 0 && gallery.length !== 0 && form.checkValidity() === true) {\n      event.preventDefault(); // setVariantRequired(false)\n\n      setTagRequired(false);\n\n      if (isEdit) {\n        // console.log('update')\n        const data = await editProduct(formf, props.location.state.id, gallery, tagId);\n\n        if (data) {\n          console.log('hi');\n          setSnackBarOpen(true);\n          setTimeout(() => {\n            props.history.push('/product/');\n          }, 1000);\n        } else {\n          setStoreError(true);\n        }\n      } else {\n        console.log('hi');\n        const data = await addProduct(formf, gallery, tagId);\n\n        if (data) {\n          setSnackBarOpen(true);\n          setTimeout(() => {\n            props.history.push('/product');\n          }, 1000);\n        } else {\n          setStoreError(true);\n        }\n      }\n    } else if (tagId.length === 0) {\n      // setVariantRequired(false)\n      setTagRequired(true);\n      event.preventDefault();\n    } else {\n      event.preventDefault();\n      setTagRequired(false); // setVariantRequired(true)\n    }\n\n    setValidated(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isEdit && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 26\n    }, this), isEdit && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        margin: '0px 5px'\n      },\n      onClick: () => {\n        props.history.push('/product');\n      },\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      style: styles,\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: formf.name,\n            onChange: e => setField('name', e.target.value),\n            placeholder: \"Enter Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Enter a Product Name.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Brand Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: formf.brandName,\n            onChange: e => setField('brandName', e.target.value),\n            placeholder: \"Enter Brand Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Enter a Brand Name.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Short Desription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: formf.shortDescription,\n            onChange: e => setField('shortDescription', e.target.value),\n            placeholder: \"Enter Short Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Enter short description.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Desription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: formf.description,\n            onChange: e => setField('description', e.target.value),\n            placeholder: \"Enter Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Enter description.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Sub Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            defaultValue: \"\",\n            value: formf.subCategory,\n            onChange: e => setField('subCategory', e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 33\n            }, this), subCategory && subCategory.map(team => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: team._id,\n              children: team.name\n            }, team._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 75\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please  choose a Category.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '0px',\n            width: '200px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: tagInput,\n              onChange: e => tagEvent(e.target.value),\n              placeholder: \"Enter Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 33\n            }, this), nullTag && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red'\n              },\n              children: \"Null valuues are not accepted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => addTagHandler(),\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please Enter description.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '200px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Tags Applied\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                border: '1px solid #000',\n                height: '200px',\n                width: '170px',\n                maxHeight: '200px',\n                overflow: 'auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  padding: '10px',\n                  display: 'flex',\n                  flexWrap: 'wrap'\n                },\n                children: tagNew && tagNew.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    width: '100%',\n                    height: ' 32px',\n                    display: 'flex',\n                    alignItems: ' center',\n                    justifyContent: 'center',\n                    color: '#fff',\n                    fontSize: ' 14px',\n                    listStyle: 'none',\n                    borderRadius: '6px',\n                    margin: '5px 10px',\n                    background: '#0052cc'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginTop: '3px'\n                    },\n                    children: value.tag\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => {\n                      setTag([...tag, value]);\n                      popTag(value._id);\n                    },\n                    style: {\n                      width: '16px',\n                      height: '16px',\n                      display: 'block',\n                      lineHeight: '16px',\n                      fontSize: '14px',\n                      textAlign: 'center',\n                      position: 'relative',\n                      right: '-10px',\n                      color: ' #0052cc',\n                      borderRadius: '50%',\n                      background: '#fff',\n                      cursor: 'pointer'\n                    },\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 49\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 37\n              }, this), tagRequired && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: 'red'\n                },\n                children: \"Atleast one tag is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '200px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Tags availabe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                border: '1px solid #000',\n                height: '200px',\n                width: '170px',\n                maxHeight: '200px',\n                overflow: 'auto'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  padding: '10px',\n                  display: 'flex',\n                  flexWrap: 'wrap'\n                },\n                children: tag && tag.map((tag, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    width: 'auto',\n                    height: ' 32px',\n                    display: 'flex',\n                    alignItems: ' center',\n                    justifyContent: 'center',\n                    color: '#fff',\n                    padding: ' 0 8px',\n                    fontSize: ' 14px',\n                    listStyle: 'none',\n                    borderRadius: '6px',\n                    margin: '0 8px 8px 0',\n                    background: '#0052cc'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginTop: '3px'\n                    },\n                    children: tag.tag\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => {\n                      setTagNew([...tagNew, tag]);\n                      reduceTag(tag._id);\n                    },\n                    style: {\n                      display: 'block',\n                      flexDirection: 'row-reverse',\n                      width: '16px',\n                      height: '16px',\n                      lineHeight: '16px',\n                      textAlign: 'center',\n                      fontSize: '14px',\n                      marginLeft: '8px',\n                      color: ' #0052cc',\n                      alignItems: 'right',\n                      borderRadius: '50%',\n                      background: '#fff',\n                      cursor: 'pointer'\n                    },\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 49\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              type: \"number\",\n              value: formf.price,\n              onChange: e => setField('price', e.target.value),\n              placeholder: \"Enter Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please Enter price.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              type: \"number\",\n              value: formf.stock,\n              onChange: e => setField('stock', e.target.value),\n              placeholder: \"Enter Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please Enter Stock.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Url\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: formf.url,\n              onChange: e => setField('url', e.target.value),\n              placeholder: \"Enter the url\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please Enter the urStock.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setImgArray();\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setOpen(!open),\n              \"aria-controls\": \"example-collapse-text\",\n              \"aria-expanded\": open,\n              children: !open ? 'Edit Images' : 'close'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: open,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexWrap: 'wrap'\n              },\n              children: gallery && gallery.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '120px',\n                  borderRadius: '10%',\n                  border: '1px solid #777',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  margin: '10px',\n                  padding: \"5px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(BsTrashFill, {\n                  style: {\n                    marginLeft: '80px'\n                  },\n                  size: 30,\n                  onClick: () => {\n                    console.log(team._id);\n                    setGallery(gallery.filter(item => item !== team));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: team,\n                  height: \"100px\",\n                  width: \"100px\",\n                  alt: \"added_image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 75\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Model number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: formf.modelNumber,\n            onChange: e => setField('modelNumber', e.target.value),\n            placeholder: \"Enter Model Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Enter the model number.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Model Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: formf.modelName,\n            onChange: e => setField('modelName', e.target.value),\n            placeholder: \"Enter Model Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Enter the model name.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Release Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"date\",\n            value: formf.releaseDate,\n            onChange: e => setField('releaseDate', e.target.value),\n            placeholder: \"Enter Release date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Choose the release date.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 21\n      }, this), isEdit && /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            checked: formf.isActive === true,\n            type: \"radio\",\n            label: \"Active\",\n            name: \"formHorizontalRadios\",\n            onClick: () => setField('isActive', true),\n            id: \"formHorizontalRadios1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            checked: formf.isActive === false,\n            type: \"radio\",\n            label: \"InActive\",\n            onClick: () => setField('isActive', false),\n            name: \"formHorizontalRadios\",\n            id: \"formHorizontalRadios2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 25\n      }, this), storeError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: [\"Cannot \", isEdit ? 'Update' : 'Save', \" the data \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: isEdit ? 'Update' : 'Save'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          view();\n        },\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          margin: '10px'\n        },\n        onClick: () => {\n          props.history.push('/product');\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackBarOpen,\n      message: isEdit ? \"Successfully Updated\" : \"Successfully Added\",\n      autoHideDuration: 3500,\n      onClose: handleCloseSnack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductForm, \"i+4F6XIubV4PrUvAns06BLZO1mM=\");\n\n_c = ProductForm;\nexport default ProductForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"sources":["/Users/mac/dev/store2/admin/src/products/productEditForm.js"],"names":["React","useState","useEffect","Form","Col","Collapse","Button","Spinner","getAllTags","addProduct","editProduct","getAllCategory","getAllSubCategory","BsTrashFill","addTag","Snackbar","ProductForm","props","styles","margin","open","setOpen","snackBarOpen","setSnackBarOpen","handleCloseSnack","gallery","setGallery","tag","setTag","tagNew","setTagNew","tagInput","setTagInput","subCategory","setSubCategory","category","setCategory","formf","setForm","url","isEdit","setIsEdit","tagId","setTagId","nullTag","setNullTag","tagRequired","setTagRequired","getValues","location","state","err","console","log","tags","setSub","setValidated","setStoreError","value","setField","field","tagEvent","e","setImgArray","view","addTagHandler","data","_id","reduceTag","id","filter","item","popTag","validated","storeError","handleSubmit","event","form","currentTarget","length","checkValidity","preventDefault","setTimeout","history","push","name","target","brandName","shortDescription","description","map","team","width","color","border","height","maxHeight","overflow","padding","display","flexWrap","index","alignItems","justifyContent","fontSize","listStyle","borderRadius","background","marginTop","lineHeight","textAlign","position","right","cursor","flexDirection","marginLeft","price","stock","modelNumber","modelName","releaseDate","isActive"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Form, Col,Collapse, Button, Spinner } from 'react-bootstrap';\nimport {  getAllTags, addProduct, editProduct } from './../services/productService'\nimport {getAllCategory,getAllSubCategory} from './../services/categoryService'\nimport { BsTrashFill } from \"react-icons/bs\";\n\n// import { VariantForm } from './variantForm'\n// import MaterialTable from 'material-table'\nimport { addTag } from './../services/tagService'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nexport const ProductForm = (props) => {\n    \n    const styles = {\n        margin: \"20px 50px\"\n    }\n    const [open, setOpen] = useState(false);\n\n    // const columns = [{ title: \"Color\", field: 'color' },\n    // { title: \"Size\", field: 'size' },\n    // { title: \"Price\", field: 'price' },\n    // { title: \"Stock\", field: 'stock' },\n    // ]\n    const [snackBarOpen,setSnackBarOpen] = useState(false)\n    const handleCloseSnack=()=>{\n        setSnackBarOpen(false)\n    }\n    // const [editImage, setEditImage] = useState([])\n    // const [editVariant, setEditVariant] = useState({})\n    // const [isVariantEdit, setIsVariantEdit] = useState(false)\n    // const [modalShow, setModalShow] = React.useState(false);\n    const [gallery,setGallery]= useState([])\n    const [tag, setTag] = useState([])\n    const [tagNew, setTagNew] = useState([])\n    const [tagInput, setTagInput] = useState('')\n    const [subCategory, setSubCategory] = useState(null)\n    const [category, setCategory] = useState(null)\n    // const [variant, setVariant] = useState([])\n    // const [variantId, setVariantId] = useState([])\n    const [formf, setForm] = useState({url:''})\n    const [isEdit, setIsEdit] = useState(false)\n    const [tagId, setTagId] = useState([])\n    const [nullTag, setNullTag] = useState(false)\n    const [tagRequired, setTagRequired] = useState(false)\n    // const {edit} = props.location.state\n    const getValues = async () => {\n\n        try {\n            const category = await getAllCategory()\n            setCategory(category)\n            const tag = await getAllTags()\n            if (props.location.state) {\n                setTagId(props.location.state.tagId)\n\n                //const data = await tag.filter(item => {\n                //    return props.location.state.tagId.indexOf(item._id) === -1\n                //})\n                //setTag(data)\n            }\n            else {\n                setTag(tag)\n            }\n        }\n        catch (err) {\n            console.log(err)\n\n        }\n        if (!props.location.state) {\n\n            setIsEdit(false)\n        }\n        else {\n            setForm(props.location.state)\n            // setVariant(props.location.state.variants)\n            console.log(props.location.state)\n            setTagNew(props.location.state.tags)\n            setSub(props.location.state.category)\n            setGallery(props.location.state.gallery)\n            setIsEdit(true)\n        }\n    }\n    useEffect(() => {\n        getValues()\n        // setVariantRequired(false)\n        setTagRequired(false)\n        setValidated(false)\n        setStoreError(false)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    // const tageditor=async(data)=>{\n    //    setTag(data)\n    // }\n    // const dataChooser = () => {\n\n    //     return variant\n    // }\n    const setSub =async(value)=>{\n        //const data = await getAllSubCategory(value)\n        //    console.log('-----------',data)\n        //    setSubCategory(data)\n    }\n    const setField = async(field, value) => {\n        if(field==='category'){\n            console.log('foreds',field,value)\n            setSub(value)\n        }\n        setForm({\n            ...formf,\n            [field]: value\n        })\n    }\n    const tagEvent = (e) => {\n        setTagInput(\n            e\n        )\n        setNullTag(false)\n\n    }\n    const setImgArray=()=>{\n        if(formf.url!==''){\n            console.log(formf.url)\n            setGallery([...gallery,\n            formf.url])\n            setForm({\n                ...formf,\n                url:''\n            })\n        }\n    }\n    const view = ()=>{\n        console.log('newtag',tagNew)\n        console.log('tagid',tagId)\n        console.log('----',formf)\n        console.log('oldtag',tag)\n        console.log(gallery)\n    }\n    // const ss = (data) => {\n    //     setVariantRequired(false)\n    //     setVariant(\n    //         data\n    //     )\n    //     setModalShow(false)\n    // }\n    // const s = (data) => {\n    //     setVariantRequired(false)\n    //     console.log('Saved',data)\n    //     setVariant([\n    //         ...variant,\n    //         data\n    //     ])\n    //     setVariantId([\n    //         ...variantId,\n    //         data._id])\n    //     setModalShow(false)\n    // }\n    const addTagHandler = async () => {\n        if (tagInput !== '') {\n            const data = await addTag(tagInput,false)\n            setTagNew([\n                ...tagNew,\n                data\n            ])\n            console.log(\"New Tag\",data)\n            setTagId([\n                ...tagId,\n                data._id\n            ])\n            setTagInput('')\n            setNullTag(false)\n        }\n        else {\n            setNullTag(true)\n        }\n    }\n    const reduceTag = (id) => {\n        setTagId([\n            ...tagId,\n            id\n        ])\n        setTag(tag.filter(item => item._id !== id))\n    }\n    const popTag = (id) => {\n        setTagId(tagId.filter(item => item !== id))\n        setTagNew(tagNew.filter(item => item._id !== id))\n    }\n    const [validated, setValidated] = useState(false);\n    const [storeError, setStoreError] = useState(false);\n    // const [variantRequired, setVariantRequired] = useState(false)\n    const handleSubmit = async (event) => {\n        const form = event.currentTarget;\n        console.log(tagId.length !== 0)\n        if (tagId.length !== 0 && gallery.length !== 0 &&  form.checkValidity() === true) {\n\n            event.preventDefault();\n            // setVariantRequired(false)\n            setTagRequired(false)\n            if (isEdit) {\n                // console.log('update')\n                const data = await editProduct(formf, props.location.state.id, gallery, tagId)\n                if (data) {\n                    console.log('hi')\n                    setSnackBarOpen(true)\n                    setTimeout(() => {\n                        props.history.push('/product/')\n                      \n                    }, 1000);                   \n                }\n                else {\n                    setStoreError(true)\n                }\n            }\n            else {\n                console.log('hi')\n                const data = await addProduct(formf, gallery, tagId)\n                if (data) {\n                    setSnackBarOpen(true)\n                    setTimeout(() => {\n                        props.history.push('/product')\n                        \n                    }, 1000);\n                   \n                }\n                else {\n                    setStoreError(true)\n                }\n            }\n        }\n        \n        else if (tagId.length === 0) {\n            // setVariantRequired(false)\n            setTagRequired(true)\n            event.preventDefault();\n        }\n        else {\n            event.preventDefault();\n            setTagRequired(false)\n            // setVariantRequired(true)\n        }\n        setValidated(true);\n    };\n\n\n    return (\n        <div>{!isEdit && <p>Add Product</p>}\n            {isEdit && <p>Update Product</p>}\n            <Button style={{ margin: '0px 5px' }} onClick={() => {\n                props.history.push('/product')\n            }}>\n                Back\n                    </Button>\n            {/* <Button onClick={()=>{view()}}>view</Button> */}\n\n\n                <Form style={styles} noValidate validated={validated} onSubmit={handleSubmit}>\n                    <Form.Row>\n\n                        <Form.Group as={Col} >\n                            <Form.Label>Product Name</Form.Label>\n                            <Form.Control required type=\"text\" value={formf.name} onChange={(e) => setField('name', e.target.value)} placeholder=\"Enter Product Name\" />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Please Enter a Product Name.\n            </Form.Control.Feedback>\n\n                        </Form.Group>\n                        <Form.Group as={Col} >\n                            <Form.Label>Brand Name</Form.Label>\n                            <Form.Control required type=\"text\" value={formf.brandName} onChange={(e) => setField('brandName', e.target.value)} placeholder=\"Enter Brand Name\" />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Please Enter a Brand Name.\n            </Form.Control.Feedback>\n                        </Form.Group>\n\n                    </Form.Row>\n                    <Form.Row>\n\n                        <Form.Group as={Col}>\n                            <Form.Label>Short Desription</Form.Label>\n                            <Form.Control required type=\"text\" value={formf.shortDescription} onChange={(e) => setField('shortDescription', e.target.value)} placeholder=\"Enter Short Description\" />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Please Enter short description.\n            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col}>\n                            <Form.Label>Desription</Form.Label>\n                            <Form.Control required type=\"text\" value={formf.description} onChange={(e) => setField('description', e.target.value)} placeholder=\"Enter Description\" />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Please Enter description.\n            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col}>\n                            <Form.Label>Sub Category</Form.Label>\n                            <Form.Control required as=\"select\"  defaultValue='' value={formf.subCategory} onChange={(e) => setField('subCategory', e.target.value)} >\n                                <option value=''>Select a Category</option>\n                                {subCategory && subCategory.map((team) => <option key={team._id} value={team._id}>{team.name}</option>)}\n\n                            </Form.Control>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Please  choose a Category.\n            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n\n                        <div style={{ margin: '0px', width: '200px' }}>\n                            <Form.Group as={Col}>\n                                <Form.Label>Tag</Form.Label>\n                                <Form.Control type=\"text\" value={tagInput}\n                                    onChange={(e) => tagEvent(e.target.value)} placeholder=\"Enter Description\" />\n                                {nullTag && <p style={{ color: 'red' }}>Null valuues are not accepted</p>}\n                                <Button onClick={() => addTagHandler()}>Add</Button>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please Enter description.\n            </Form.Control.Feedback>\n                            </Form.Group>\n                        </div>\n                        <div style={{ width: '200px' }}>\n                            <Form.Group as={Col}>\n                                <h4>Tags Applied</h4>\n                                <div style={{\n                                    border: '1px solid #000', height: '200px', width: '170px',\n                                    maxHeight: '200px', overflow: 'auto'\n                                }}>\n                                    <ul style={{ padding: '10px', display: 'flex', flexWrap: 'wrap' }}>\n                                        {tagNew && tagNew.map((value, index) => (\n                                            <li key={index} style={{\n                                                width: '100%', height: ' 32px', display: 'flex', alignItems: ' center',\n                                                justifyContent: 'center', color: '#fff',\n                                                fontSize: ' 14px',\n                                                listStyle: 'none',\n                                                borderRadius: '6px',\n                                                margin: '5px 10px',\n                                                background: '#0052cc'\n                                            }}>\n                                                <span style={{ marginTop: '3px' }}>{value.tag}</span>\n                                                <span\n                                                    onClick={() => {\n                                                        setTag([...tag, value])\n                                                        popTag(value._id)\n                                                    }}\n                                                    style={{\n                                                        width: '16px', height: '16px', display: 'block',\n                                                        lineHeight: '16px', fontSize: '14px',\n                                                        textAlign: 'center', position: 'relative', right: '-10px',\n                                                        color: ' #0052cc',\n                                                        borderRadius: '50%', background: '#fff', cursor: 'pointer'\n                                                    }}\n                                                >\n                                                    -\n\t\t\t\t\t\t</span>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                    {tagRequired && <p style={{ color: 'red' }}>Atleast one tag is required</p>}\n\n                                </div>\n                            </Form.Group>\n                        </div>\n                        <div style={{ width: '200px' }}>\n                            <Form.Group as={Col}>\n                                <h4>Tags availabe</h4>\n                                <div style={{\n                                    border: '1px solid #000', height: '200px', width: '170px',\n                                    maxHeight: '200px', overflow: 'auto'\n                                }}>\n\n                                    <ul style={{ padding: '10px', display: 'flex', flexWrap: 'wrap' }}>\n                                        {tag && tag.map((tag, index) => (\n                                            <li key={index} style={{\n                                                width: 'auto', height: ' 32px', display: 'flex', alignItems: ' center',\n                                                justifyContent: 'center', color: '#fff', padding: ' 0 8px',\n                                                fontSize: ' 14px',\n                                                listStyle: 'none',\n                                                borderRadius: '6px',\n                                                margin: '0 8px 8px 0',\n                                                background: '#0052cc'\n                                            }}>\n                                                <span style={{ marginTop: '3px' }}>{tag.tag}</span>\n                                                <span\n                                                    onClick={() => {\n                                                        setTagNew([...tagNew, tag])\n                                                        reduceTag(tag._id)\n                                                    }}\n                                                    style={{\n                                                        display: 'block', flexDirection: 'row-reverse', width: '16px', height: '16px',\n                                                        lineHeight: '16px', textAlign: 'center', fontSize: '14px',\n                                                        marginLeft: '8px', color: ' #0052cc', alignItems: 'right',\n                                                        borderRadius: '50%', background: '#fff', cursor: 'pointer'\n                                                    }}\n                                                >\n                                                    +\n\t\t\t\t\t\t</span>\n                                            </li>\n                                        ))}\n                                    </ul>\n\n                                </div>\n                            </Form.Group>\n                        </div>\n                        <div>\n                        <Form.Group as={Col}>\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control required type=\"number\" value={formf.price} onChange={(e) => setField('price', e.target.value)} placeholder=\"Enter Price\" />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Please Enter price.\n            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col}>\n                            <Form.Label>Stock</Form.Label>\n                            <Form.Control required type=\"number\" value={formf.stock} onChange={(e) => setField('stock', e.target.value)} placeholder=\"Enter Stock\" />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Please Enter Stock.\n            </Form.Control.Feedback>\n                        </Form.Group>\n                        \n                       <Form.Group as={Col}>\n                            <Form.Label>Url</Form.Label>\n                            <Form.Control  type=\"text\" value={formf.url} onChange={(e) => setField('url', e.target.value)} placeholder=\"Enter the url\" />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Please Enter the urStock.\n            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Button onClick={()=>{setImgArray()}}>Add</Button>\n                      \n                        </div>\n                       <Form.Row>\n                           <Form.Group as={Col}>\n                           <Button\n                                onClick={() => setOpen(!open)}\n                                aria-controls=\"example-collapse-text\"\n                                aria-expanded={open}\n                            >\n                                {!open ? 'Edit Images' : 'close'}\n                            </Button>\n                           </Form.Group>\n                       </Form.Row>\n\n                            <Collapse in={open}>\n                                <div >\n                                    <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n\n\n                                        {gallery && gallery.map((team) => <div style={{\n                                            width: '120px', borderRadius: '10%', border: '1px solid #777',\n                                            display: 'flex', flexDirection: 'column',\n                                            margin: '10px', padding: \"5px\"\n                                        }}>\n                                            <BsTrashFill style={{ marginLeft: '80px' }} size={30} onClick={() => {\n                                                console.log(team._id)\n                                                 setGallery(gallery.filter(item => item !== team));\n                                            }} />\n                                            <img\n                                                src={team}\n                                                height=\"100px\"\n                                                width=\"100px\"\n                                                alt=\"added_image\"\n                                            />\n\n                                        </div>\n                                        )}\n                                    </div>\n                                </div>\n                            </Collapse>\n                        \n                        \n                        {/* <div style={{ width: '800px' }}>\n                          \n                            <Form.Group as={Col} style={{ paddingLeft: '10px', alignItems: 'center' }}>\n\n                                <div style={{ margin: '5px' }}>\n\n                                    <Button variant=\"primary\" onClick={() => {\n                                        setEditVariant({})\n                                        setEditImage([])\n                                        setTimeout(() => {\n                                            setIsVariantEdit(false)\n                                            setModalShow(true)\n                                        }, 1);\n\n                                    }\n                                    }>\n                                        Add Variants\n                              </Button>\n                                    {variantRequired && <p style={{ color: 'red' }}>Atleast one variant is required</p>}\n                                </div>\n                                <div >\n                                    {<MaterialTable title='Variants' data={dataChooser()}\n                                        columns={columns}\n                                        options={\n                                            {\n\n                                                paging: false, actionsColumnIndex: -1\n                                            }\n                                        }\n                                        actions={[\n                                            {\n                                                icon: 'edit',\n                                                tooltip: 'Edit Variant',\n                                                onClick: async (event, rowData) => {\n                                                    setEditImage(rowData.gallery)\n                                                    setEditVariant(rowData)\n                                                    setIsVariantEdit(true)\n                                                    setModalShow(true)\n                                                }\n                                            },\n                                        ]}\n                                        editable={{\n                                            onRowDelete: selectedRow => new Promise((resolve, reject) => {\n                                                const id = selectedRow._id\n\n                                                setVariantId(variantId.filter(item => item !== id))\n                                                setVariant(variant.filter(item => item._id !== id));\n                                                setTimeout(() => {\n                                                    resolve()\n                                                }, 1200)\n                                            }),\n                                        }}>\n                                    </MaterialTable>}\n                                </div>\n                                <VariantForm\n                                    variant={variant}\n                                    updatevariant={(data) => { ss(data) }}\n                                    show={modalShow}\n                                    editVariant={editVariant}\n                                    editImage={editImage}\n                                    onHide={() => setModalShow(false)}\n                                    onSave={(data) => { s(data) }}\n                                    edit={isVariantEdit}\n                                />\n                            </Form.Group>\n                        </div> */}\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} >\n                            <Form.Label> Model number</Form.Label>\n                            <Form.Control required type=\"text\" value={formf.modelNumber} onChange={(e) => setField('modelNumber', e.target.value)} placeholder=\"Enter Model Number\" />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Please Enter the model number.\n            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} >\n                            <Form.Label> Model Name</Form.Label>\n                            <Form.Control required type=\"text\" value={formf.modelName} onChange={(e) => setField('modelName', e.target.value)} placeholder=\"Enter Model Name\" />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Please Enter the model name.\n            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} >\n                            <Form.Label> Release Date</Form.Label>\n                            <Form.Control required type=\"date\" value={formf.releaseDate} onChange={(e) => setField('releaseDate', e.target.value)} placeholder=\"Enter Release date\" />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Choose the release date.\n            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n\n                    {\n                        isEdit &&\n                        <Form.Row>\n                            <Form.Group as={Col} >\n                                <Form.Check checked={formf.isActive === true}\n                                    type=\"radio\"\n                                    label=\"Active\"\n                                    name=\"formHorizontalRadios\"\n                                    onClick={() => setField('isActive', true)}\n                                    id=\"formHorizontalRadios1\"\n                                />\n                                <Form.Check checked={formf.isActive === false}\n                                    type=\"radio\"\n                                    label=\"InActive\"\n                                    onClick={() => setField('isActive', false)}\n                                    name=\"formHorizontalRadios\"\n                                    id=\"formHorizontalRadios2\"\n                                />\n                            </Form.Group>\n                        </Form.Row>\n                    }\n\n                    {storeError && <p style={{ color: 'red' }}>Cannot {isEdit ? 'Update' : 'Save'} the data </p>}\n                    <Button type='submit'>{isEdit ? 'Update' : 'Save'}</Button>\n                    <Button onClick={()=>{\n                        view()\n                    }}>View</Button>\n\n                    <Button style={{ margin: '10px' }} onClick={() => {\n                        props.history.push('/product')\n                    }}>\n                        Close\n                    </Button>\n                </Form>\n                \n\n            <Snackbar open={snackBarOpen} message={isEdit?\"Successfully Updated\":\"Successfully Added\"} \n             autoHideDuration={3500} onClose={handleCloseSnack}>\n        \n        </Snackbar>\n        \n\n        </div>\n    )\n}\nexport default ProductForm\n"]},"metadata":{},"sourceType":"module"}