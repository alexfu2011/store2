{"ast":null,"code":"var _jsxFileName = \"/Users/mac/dev/E-Commerce-Admin-React/src/products/variantForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal, Form, Col, Collapse } from 'react-bootstrap';\nimport { addVariant, updateVariant } from './../services/productService';\nimport { BsTrashFill } from \"react-icons/bs\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VariantForm = props => {\n  _s();\n\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  const handleCloseSnack = () => {\n    setSnackBarOpen(false);\n  };\n\n  const [variants, setVariants] = useState({});\n  const [preVariant, setPreVariant] = useState([]);\n  const [imageArray, setImageArray] = useState([]);\n  const [imageUrl, setImageUrl] = useState('');\n  const [open, setOpen] = useState(false);\n  const [nullUrl, setNullUrl] = useState(false);\n  const [nullType, setNullType] = useState('');\n  const [imageType, setImageType] = useState('');\n\n  const setField = (field, value) => {\n    setVariants({ ...variants,\n      [field]: value\n    });\n  }; // console.log(imageArray)\n\n\n  const setImgArray = () => {\n    // console.log('---',imageUrl)\n    // console.log('---',imageType)\n    if (imageType === '') {\n      setNullType(true);\n    }\n\n    if (imageUrl === '') {\n      setNullUrl(true);\n    }\n\n    if (imageUrl !== '' && imageType !== '') {\n      setNullType(false);\n      setNullUrl(false);\n      setImageArray([...imageArray, {\n        url: imageUrl,\n        type: imageType\n      }]);\n      setImageUrl('');\n    }\n\n    setImageValidation(false);\n  };\n\n  const setImgUrl = value => {\n    // console.log('')\n    setImageUrl(value);\n    setNullUrl(false);\n  };\n\n  const setImgType = value => {\n    setImageType(value);\n    setNullType(false);\n  };\n\n  const [isEdit, setIsEdit] = useState(null);\n  const [validated, setValidated] = useState(false);\n  const [update, setUpdate] = useState(false);\n  const [storeError, setStoreError] = useState(false);\n  const [imageValidation, setImageValidation] = useState(false);\n\n  const handleSubmitV = async e => {\n    e.stopPropagation();\n    const form = e.currentTarget;\n    console.log(form.checkValidity());\n\n    if (imageArray.length !== 0 && form.checkValidity() === true) {\n      // console.log('valid')\n      e.preventDefault();\n      setImageValidation(false);\n\n      if (!isEdit) {\n        // console.log('add')\n        const data = await addVariant(variants, imageArray); // console.log('dataOfAddVar')\n\n        if (data) {\n          setSnackBarOpen(true);\n          setTimeout(() => {\n            props.onSave(data);\n          }, 1000);\n        } else {\n          setStoreError(true);\n        }\n      } else {\n        const data = await updateVariant(variants, imageArray, props.editVariant._id);\n\n        if (data) {\n          // console.log('datat', data.data.Variant)\n          await setPreVariant([...preVariant, data.data.Variant[0]]);\n          setUpdate(true);\n          setSnackBarOpen(true);\n          setStoreError(false);\n        } else {\n          setStoreError(true);\n        }\n      }\n    } else if (imageArray.length !== 0) {\n      setImageValidation(false);\n      e.preventDefault();\n    } else {\n      e.preventDefault();\n      setImageValidation(true);\n    }\n\n    setValidated(true);\n  };\n\n  const view = () => {\n    console.log('Image', imageArray);\n    console.log('Prevar', preVariant);\n  };\n\n  const updateV = () => {\n    setTimeout(() => {\n      props.updatevariant(preVariant);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (props.editVariant) {\n      setVariants(props.editVariant);\n    }\n\n    if (props.editImage) {\n      setImageArray(props.editImage); // console.log(\"image\", props.editImage)\n    }\n\n    if (props.edit) {\n      setIsEdit(props.edit);\n    } else {\n      setIsEdit(false);\n    }\n\n    if (props.variant) {\n      setPreVariant(props.variant.filter(item => item._id !== props.editVariant._id));\n    }\n\n    setStoreError(false);\n    setValidated(false);\n    setImageValidation(false);\n    setUpdate(false);\n    setNullType(false);\n    setNullUrl(false); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.editVariant && /*#__PURE__*/_jsxDEV(Modal, { ...props,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Add Variant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Variant images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: imageUrl,\n                onChange: e => setImgUrl(e.target.value),\n                placeholder: \"Enter Variant Image URL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this), nullUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red'\n              },\n              children: \"Null value cannot be accepted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"radio\",\n                label: \"Image\",\n                name: \"formHorizontalRadios\",\n                onClick: () => setImgType('image'),\n                id: \"formHorizontalRadios1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"radio\",\n                label: \"Video\",\n                onClick: () => setImgType('video'),\n                name: \"formHorizontalRadios\",\n                id: \"formHorizontalRadios2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 33\n            }, this), nullType && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red'\n              },\n              children: \"Null type cannot be accepted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginTop: '30px',\n                height: '40px'\n              },\n              onClick: () => {\n                setImgArray();\n              },\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), imageValidation && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: \"Atleast one image should be added\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 49\n          }, this), imageArray && imageArray.map(team => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: team.url,\n            height: \"50px\",\n            width: \"50px\",\n            alt: \"added_image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 69\n          }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpen(!open),\n            \"aria-controls\": \"example-collapse-text\",\n            \"aria-expanded\": open,\n            children: !open ? 'Edit Images' : 'close'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: open,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexWrap: 'wrap'\n                },\n                children: imageArray && imageArray.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '120px',\n                    borderRadius: '10%',\n                    border: '1px solid #777',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    margin: '10px',\n                    padding: \"5px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(BsTrashFill, {\n                    style: {\n                      marginLeft: '80px'\n                    },\n                    size: 30,\n                    onClick: () => {\n                      console.log(team._id);\n                      setImageArray(imageArray.filter(item => item.url !== team.url));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: team.url,\n                    height: \"100px\",\n                    width: \"100px\",\n                    alt: \"added_image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 81\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          validated: validated,\n          onSubmit: handleSubmitV,\n          children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Variant Color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                value: variants.color,\n                type: \"text\",\n                onChange: e => setField('color', e.target.value),\n                placeholder: \"Enter Variant Color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please  enter a color.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Variant Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                as: \"select\",\n                defaultValue: \"\",\n                value: variants.size,\n                onChange: e => setField('size', e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"choose the size\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"XS\",\n                  children: \"XS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"S\",\n                  children: \"S\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"M\",\n                  children: \"M\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"L\",\n                  children: \"L\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"XL\",\n                  children: \"XL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"XXL\",\n                  children: \"XXL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please  choose a Size.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Variant Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                type: \"number\",\n                value: variants.price,\n                onChange: e => setField('price', e.target.value),\n                placeholder: \"Enter Variant Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please enter the price.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Variant stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                type: \"number\",\n                value: variants.stock,\n                onChange: e => setField('stock', e.target.value),\n                placeholder: \"Enter Stocks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please  enter the stocks availabe.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }, this), !update && /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: isEdit ? 'Update' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [update && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Succesfully updated!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 36\n        }, this), storeError && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: [\"Error in \", isEdit ? 'Updating' : 'Saving', \"!!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 40\n        }, this), !update && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.onHide,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 37\n        }, this), update && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            updateV();\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n          open: snackBarOpen,\n          message: isEdit ? \"Successfully Updated Variants\" : \"Successfully Added Variants\",\n          autoHideDuration: 3500,\n          onClose: handleCloseSnack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            view();\n          },\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n};\n\n_s(VariantForm, \"sjX7IHfOyRpZjdcUQ6hzuaov0ic=\");\n\n_c = VariantForm;\nexport default VariantForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"VariantForm\");","map":{"version":3,"sources":["/Users/mac/dev/E-Commerce-Admin-React/src/products/variantForm.js"],"names":["React","useState","useEffect","Button","Modal","Form","Col","Collapse","addVariant","updateVariant","BsTrashFill","Snackbar","VariantForm","props","snackBarOpen","setSnackBarOpen","handleCloseSnack","variants","setVariants","preVariant","setPreVariant","imageArray","setImageArray","imageUrl","setImageUrl","open","setOpen","nullUrl","setNullUrl","nullType","setNullType","imageType","setImageType","setField","field","value","setImgArray","url","type","setImageValidation","setImgUrl","setImgType","isEdit","setIsEdit","validated","setValidated","update","setUpdate","storeError","setStoreError","imageValidation","handleSubmitV","e","stopPropagation","form","currentTarget","console","log","checkValidity","length","preventDefault","data","setTimeout","onSave","editVariant","_id","Variant","view","updateV","updatevariant","editImage","edit","variant","filter","item","target","color","marginTop","height","map","team","display","flexWrap","width","borderRadius","border","flexDirection","margin","padding","marginLeft","size","price","stock","onHide"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Button, Modal, Form, Col, Collapse } from 'react-bootstrap'\nimport { addVariant, updateVariant } from './../services/productService'\nimport { BsTrashFill } from \"react-icons/bs\";\nimport Snackbar from '@material-ui/core/Snackbar'\n\nexport const VariantForm = (props) => {\n    const [snackBarOpen,setSnackBarOpen] = useState(false)\n    const handleCloseSnack=()=>{\n        setSnackBarOpen(false)\n    }\n    const [variants, setVariants] = useState({})\n    const [preVariant, setPreVariant] = useState([])\n    const [imageArray, setImageArray] = useState([])\n    const [imageUrl, setImageUrl] = useState('')\n    const [open, setOpen] = useState(false);\n    const [nullUrl, setNullUrl] = useState(false);\n    const [nullType, setNullType] = useState('');\n    const [imageType, setImageType] = useState('')\n    const setField = (field, value) => {\n        setVariants({\n            ...variants,\n            [field]: value\n        })\n\n    }\n    // console.log(imageArray)\n    const setImgArray = () => {\n        // console.log('---',imageUrl)\n        // console.log('---',imageType)\n        if(imageType===''){\n            setNullType(true)\n        }\n        if(imageUrl===''){\n            setNullUrl(true)\n        }\n        if(imageUrl!=='' && imageType!=='')\n        {\n            setNullType(false)\n            setNullUrl(false)\n            setImageArray([\n                ...imageArray,\n                {url:imageUrl,\n                type:imageType}\n    \n            ])\n            setImageUrl('')\n        }\n        setImageValidation(false)\n    }\n    const setImgUrl = ( value) => {\n        // console.log('')\n        setImageUrl(\n            value\n        )\n        setNullUrl(false)\n    }\n    const setImgType = (value) => {\n        setImageType(\n            value\n        )\n        setNullType(false)\n    }\n    const [isEdit, setIsEdit] = useState(null)\n    const [validated, setValidated] = useState(false);\n    const [update, setUpdate] = useState(false)\n    const [storeError,setStoreError] =useState(false)\n    const [imageValidation,setImageValidation] = useState(false)\n    const handleSubmitV = async (e) => {\n        e.stopPropagation()\n        const form = e.currentTarget;\n\n        console.log(form.checkValidity())\n        if (imageArray.length !== 0 && form.checkValidity() === true) {\n            // console.log('valid')\n            e.preventDefault();\n             setImageValidation(false)\n            if (!isEdit) {\n                // console.log('add')\n                const data = await addVariant(variants, imageArray)\n                // console.log('dataOfAddVar')\n                if (data) {\n                    setSnackBarOpen(true)\n                    setTimeout(() => {\n                        props.onSave(data)\n                    }, 1000);\n                }\n                else {\n                    setStoreError(true)\n                }\n            }\n            else {\n                const data = await updateVariant(variants, imageArray, props.editVariant._id)\n        if (data) {\n\n            // console.log('datat', data.data.Variant)\n\n            await setPreVariant([\n                ...preVariant,\n                data.data.Variant[0]\n            ])\n\n            setUpdate(true)\n            setSnackBarOpen(true)\n            setStoreError(false)\n        }\n        else{\n            setStoreError(true)\n        }\n            }\n        }\n        else if (imageArray.length !== 0) {\n             setImageValidation(false)\n            e.preventDefault();\n        }\n        else {\n            e.preventDefault();\n             setImageValidation(true)\n        }\n        setValidated(true);\n    };\n   \n    \n    const view=()=>{\n        console.log('Image',imageArray)\n        console.log('Prevar',preVariant)\n    }\n    const updateV = () => {\n       \n       setTimeout(() => {\n           \n        props.updatevariant(preVariant)\n       }, 1000);\n    }\n\n    useEffect(() => {\n        if (props.editVariant) {\n            setVariants(props.editVariant)\n        }\n        if (props.editImage) {\n            setImageArray(props.editImage)\n            // console.log(\"image\", props.editImage)\n        }\n        if (props.edit) {\n            setIsEdit(props.edit)\n        }\n        else {\n            setIsEdit(false)\n        }\n\n        if (props.variant) {\n            setPreVariant(props.variant.filter(item => item._id !== props.editVariant._id));\n        }\n        setStoreError(false)\n        setValidated(false)\n        setImageValidation(false)\n        setUpdate(false)\n        setNullType(false)\n        setNullUrl(false)\n        \n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props])\n    return (\n\n        <div>\n            {props.editVariant &&\n                <Modal\n                    {...props}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Add Variant\n      </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                        <Form.Row>\n                                <Form.Group as={Col} >\n                                    <Form.Label>Variant images</Form.Label>\n\n                                    <Form.Control type=\"text\" value={imageUrl} onChange={(e) => setImgUrl(e.target.value)} placeholder=\"Enter Variant Image URL\" />\n                                </Form.Group>\n                                {nullUrl && <p style={{color:'red'}}>Null value cannot be accepted</p>}\n                                <Form.Group as={Col} >\n                                    <Form.Check\n                                    \n                                        type=\"radio\"\n                                        label=\"Image\"\n                                        name=\"formHorizontalRadios\"\n                                        onClick={() => setImgType('image')}\n                                        id=\"formHorizontalRadios1\"\n                                    />\n                                    <Form.Check\n                                        type=\"radio\"\n                                        label=\"Video\"\n                                        onClick={() => setImgType( 'video')}\n                                        name=\"formHorizontalRadios\"\n                                        id=\"formHorizontalRadios2\"\n                                    />\n                                </Form.Group>\n                                {nullType && <p style={{color:'red'}}>Null type cannot be accepted</p>}\n                                <Button style={{ marginTop: '30px', height: '40px' }} onClick={() => { setImgArray() }}>Add</Button>\n                            </Form.Row>\n                            {imageValidation && <p style={{color:'red'}}>Atleast one image should be added</p>}\n                            {imageArray && imageArray.map((team) => <img\n                                src={team.url}\n                                height=\"50px\"\n                                width=\"50px\"\n                                alt=\"added_image\"\n                            />)}\n                            <br></br>\n                            {/* {newimg && newimg.map((team) => <img \n      src={team.url}\n      height=\"50px\"\n      width=\"50px\"\n      alt=\"a_image\"\n      />)} */}\n\n                            <Button\n                                onClick={() => setOpen(!open)}\n                                aria-controls=\"example-collapse-text\"\n                                aria-expanded={open}\n                            >\n                                {!open ? 'Edit Images' : 'close'}\n                            </Button>\n\n                            <Collapse in={open}>\n                                <div >\n                                    <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n\n\n                                        {imageArray && imageArray.map((team) => <div style={{\n                                            width: '120px', borderRadius: '10%', border: '1px solid #777',\n                                            display: 'flex', flexDirection: 'column',\n                                            margin: '10px', padding: \"5px\"\n                                        }}>\n                                            <BsTrashFill style={{ marginLeft: '80px' }} size={30} onClick={() => {\n                                                console.log(team._id)\n                                                setImageArray(imageArray.filter(item => item.url !== team.url));\n                                            }} />\n                                            <img\n                                                src={team.url}\n                                                height=\"100px\"\n                                                width=\"100px\"\n                                                alt=\"added_image\"\n                                            />\n\n                                        </div>\n                                        )}\n                                    </div>\n                                </div>\n                            </Collapse>\n                        \n                        </Form>\n                        <Form noValidate validated={validated} onSubmit={handleSubmitV}>\n                            <Form.Row>\n                                <Form.Group as={Col} >\n                                    <Form.Label>Variant Color</Form.Label>\n\n                                    <Form.Control required value={variants.color} type=\"text\" onChange={(e) => setField('color', e.target.value)} placeholder=\"Enter Variant Color\" />\n                                    <Form.Control.Feedback type=\"invalid\">\n                              Please  enter a color.\n            </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} >\n                                    <Form.Label>Variant Size</Form.Label>\n                                    <Form.Control required as=\"select\" defaultValue='' value={variants.size} onChange={e => setField('size', e.target.value)}>\n                                        <option value=''>choose the size</option>\n                                        <option value='XS'>XS</option>\n                                        <option value='S'>S</option>\n                                        <option value='M'>M</option>\n                                        <option value='L'>L</option>\n                                        <option value='XL'>XL</option>\n                                        <option value='XXL'>XXL</option>\n                                    </Form.Control>\n                                    <Form.Control.Feedback type=\"invalid\">\n                              Please  choose a Size.\n            </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} >\n                                    <Form.Label>Variant Price</Form.Label>\n                                    <Form.Control required type=\"number\" value={variants.price} onChange={(e) => setField('price', e.target.value)} placeholder=\"Enter Variant Price\" />\n                                    <Form.Control.Feedback type=\"invalid\">\n                              Please enter the price.\n            </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} >\n                                    <Form.Label>Variant stock</Form.Label>\n                                    <Form.Control required type=\"number\" value={variants.stock} onChange={(e) => setField('stock', e.target.value)} placeholder=\"Enter Stocks\" />\n                                    <Form.Control.Feedback type=\"invalid\">\n                              Please  enter the stocks availabe.\n            </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            {!update && <Button  type='submit'>{ isEdit ? 'Update' : 'Save'}</Button>}\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        {update && <p style={{ color: 'green' }}>Succesfully updated!!</p>}\n                        {storeError && <p style={{ color: 'red' }}>Error in { isEdit ? 'Updating' : 'Saving'}!!</p>}\n                        {!update && <Button onClick={props.onHide}>Close</Button>}\n                        {update && <Button onClick={() => { updateV() }}>Close</Button>}\n                        \n                        <Snackbar open={snackBarOpen} message={isEdit?\"Successfully Updated Variants\":\"Successfully Added Variants\"} \n             autoHideDuration={3500} onClose={handleCloseSnack}>\n                \n        </Snackbar>\n                        <Button onClick={()=>{view()}}>View</Button>\n                    </Modal.Footer>\n                </Modal>\n            }\n    \n        </div>\n\n    );\n}\nexport default VariantForm"]},"metadata":{},"sourceType":"module"}