{"ast":null,"code":"var _jsxFileName = \"/Users/mac/dev/store2/admin/src/category/subCategory/subCategoryForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { getAllCategory, addSubCategory, updateSubCategory } from './../../services/categoryService';\nimport './subCategory.css';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SubCategoryForm = props => {\n  _s();\n\n  const [categoryList, setCategoryList] = useState(null);\n  const [validated, setValidated] = useState(false);\n  const [subCategory, setSubCategory] = useState({\n    subCategoryName: '',\n    categoryId: ''\n  });\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  const handleCloseSnack = () => {\n    setSnackBarOpen(false);\n  };\n\n  const [dbError, setDbError] = useState(false);\n  const [isActive, setIsActive] = useState(null);\n  const [isEdit, setIsEdit] = useState(false);\n\n  const getCategory = async () => {\n    const data = await getAllCategory();\n\n    if (data) {\n      setCategoryList(data);\n    }\n  };\n\n  const setField = (field, value) => {\n    setSubCategory({ ...subCategory,\n      [field]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === true) {\n      if (!isEdit) {\n        const data = await addSubCategory(subCategory);\n\n        if (data) {\n          setSnackBarOpen(true);\n          setTimeout(() => {\n            props.history.replace('/category');\n          }, 1000);\n        } else {\n          setDbError(true);\n        }\n      } else {\n        const data = await updateSubCategory(subCategory, isActive, props.location.state._id);\n\n        if (data) {\n          setSnackBarOpen(true);\n          setTimeout(() => {\n            props.history.replace('/category');\n          }, 1000);\n        } else {\n          setDbError(true);\n        }\n      }\n    }\n\n    setValidated(true);\n  };\n\n  useEffect(() => {\n    getCategory();\n    setIsEdit(false);\n\n    if (props.location.state) {\n      setIsEdit(true);\n      console.log('----===', props.location.state);\n      setSubCategory({\n        subCategoryName: props.location.state.name,\n        categoryId: props.location.state.parentCategory\n      });\n      setIsActive(props.location.state.isActive);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        props.history.push('/category');\n      },\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-box\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        validated: validated,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Sub Category Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: subCategory.subCategoryName,\n            onChange: e => {\n              setField('subCategoryName', e.target.value);\n            },\n            placeholder: \"Enter Sub Category Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Enter a sub Category Name.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Sub Category Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            value: subCategory.categoryId,\n            defaultValue: \"\",\n            onChange: e => {\n              setField('categoryId', e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a sub Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this), categoryList && categoryList.map(team => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: team._id,\n              children: team.name\n            }, team._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 77\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Select a sub Category Type.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this), isEdit && /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            checked: isActive === true,\n            type: \"radio\",\n            label: \"Active\",\n            name: \"formHorizontalRadios\",\n            onClick: () => setIsActive(true),\n            id: \"formHorizontalRadios1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            checked: isActive === false,\n            type: \"radio\",\n            label: \"InActive\",\n            onClick: () => setIsActive(false),\n            name: \"formHorizontalRadios\",\n            id: \"formHorizontalRadios2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: isEdit ? \"Update\" : \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }, this), dbError && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: [\"Cannot \", isEdit ? \"Update\" : \"Save\", \" data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackBarOpen,\n      message: isEdit ? \"Successfully updated\" : \"Successfully Saved\",\n      autoHideDuration: 3500,\n      onClose: handleCloseSnack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SubCategoryForm, \"iWqfU9GnlRRLpTSrH/g5tIxCc20=\");\n\n_c = SubCategoryForm;\nexport default SubCategoryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubCategoryForm\");","map":{"version":3,"sources":["/Users/mac/dev/store2/admin/src/category/subCategory/subCategoryForm.js"],"names":["React","useState","useEffect","Button","Form","getAllCategory","addSubCategory","updateSubCategory","Snackbar","SubCategoryForm","props","categoryList","setCategoryList","validated","setValidated","subCategory","setSubCategory","subCategoryName","categoryId","snackBarOpen","setSnackBarOpen","handleCloseSnack","dbError","setDbError","isActive","setIsActive","isEdit","setIsEdit","getCategory","data","setField","field","value","handleSubmit","e","preventDefault","form","currentTarget","checkValidity","setTimeout","history","replace","location","state","_id","console","log","name","parentCategory","push","target","map","team","color"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\nimport {Button,Form} from 'react-bootstrap'\nimport {getAllCategory,addSubCategory,updateSubCategory} from './../../services/categoryService'\nimport './subCategory.css'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nexport const SubCategoryForm=(props)=>{\n    const [categoryList,setCategoryList]=useState(null)\n    const [validated,setValidated]=useState(false)\n    const [subCategory,setSubCategory]=useState({\n        subCategoryName:'',\n        categoryId:''\n    })\n    const [snackBarOpen,setSnackBarOpen] = useState(false)\n    const handleCloseSnack=()=>{\n        setSnackBarOpen(false)\n    }\n    const [dbError,setDbError]= useState(false)\n    const [isActive,setIsActive]=useState(null)\n    const [isEdit,setIsEdit]= useState(false)\n    const getCategory=async()=>{\n        const data = await getAllCategory()\n        if(data){\n            setCategoryList(data)\n        }\n    }\n    const setField=(field,value)=>{\n        setSubCategory({\n            ...subCategory,\n            [field]:value\n        })\n    }\n\n    const handleSubmit=async(e)=>{\n        e.preventDefault();\n        const form = e.currentTarget;\n        if(form.checkValidity() === true){\n            if(!isEdit){\n                const data = await addSubCategory(subCategory)\n            if(data){\n                setSnackBarOpen(true)\n                setTimeout(() => {\n                    props.history.replace('/category')\n                }, 1000);\n\n            }\n            else{\n                setDbError(true)\n            }\n            }\n            else{\n                const data = await updateSubCategory(subCategory,isActive,props.location.state._id)\n                if(data){\n                    setSnackBarOpen(true)\n                    setTimeout(() => {\n                        props.history.replace('/category')\n                    }, 1000);\n                    }\n                else{\n                    setDbError(true)\n                }\n            }\n        }\n        setValidated(true)\n    }\n    useEffect(()=>{\n        getCategory()\n        setIsEdit(false)\n        if (props.location.state){\n            setIsEdit(true)\n            console.log('----===',props.location.state)\n            setSubCategory({\n                subCategoryName:props.location.state.name,\n                categoryId:props.location.state.parentCategory\n            })\n            setIsActive(props.location.state.isActive)\n        }\n        \n          // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    return (\n        <div className=\"page\">\n            <Button onClick={()=>{props.history.push('/category')}}>Back</Button>\n        <div className=\"form-box\">\n        <Form noValidate validated={validated} onSubmit={handleSubmit} >\n                      \n                            <Form.Group>\n                                <Form.Label>Sub Category Name</Form.Label>\n                                <Form.Control required type=\"text\" value={subCategory.subCategoryName} onChange={(e)=>{setField( 'subCategoryName',e.target.value)}} placeholder=\"Enter Sub Category Name\" />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please Enter a sub Category Name.\n                                    </Form.Control.Feedback>\n\n                            </Form.Group>\n                            \n                          \n                            <Form.Group  >\n                                <Form.Label>Sub Category Name</Form.Label>\n                                <Form.Control required as=\"select\" value={subCategory.categoryId}  defaultValue=''onChange={(e)=>{setField('categoryId',e.target.value)}} >\n                                <option value=''>Select a sub Category</option>\n                                {categoryList && categoryList.map((team) => <option key={team._id} value={team._id}>{team.name}</option>)}\n\n                            </Form.Control>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please Select a sub Category Type.\n                                    </Form.Control.Feedback>\n\n                            </Form.Group>\n                            {isEdit  &&\n                             <Form.Group  >\n                                 <Form.Check \n                                  checked={isActive === true}\n                                     type=\"radio\"\n                                     label=\"Active\"\n                                     name=\"formHorizontalRadios\"\n                                      onClick={() => setIsActive(true)}\n                                     id=\"formHorizontalRadios1\"\n                                 />\n                                 <Form.Check \n                                   checked={isActive === false}\n                                     type=\"radio\"\n                                     label=\"InActive\"\n                                     onClick={() => setIsActive(false)}\n                                     name=\"formHorizontalRadios\"\n                                     id=\"formHorizontalRadios2\"\n                                 />\n                             \n                         </Form.Group>\n                            }\n                            \n                            <Button type=\"submit\" >{isEdit?\"Update\":\"Save\"}</Button>\n                            {dbError && <p style={{color:'red'}}>Cannot {isEdit?\"Update\":\"Save\"} data</p>}\n                            </Form>\n            </div>       \n            <Snackbar open={snackBarOpen} message={isEdit?\"Successfully updated\":\"Successfully Saved\"} \n            autoHideDuration={3500} onClose={handleCloseSnack}>\n       \n       </Snackbar>\n        </div>\n    )\n}\nexport default SubCategoryForm"]},"metadata":{},"sourceType":"module"}