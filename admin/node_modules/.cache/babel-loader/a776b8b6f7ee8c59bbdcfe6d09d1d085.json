{"ast":null,"code":"var _jsxFileName = \"/Users/mac/dev/store2/admin/src/orders/orderList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getAllOrders } from '../services/orderService';\nimport { Button, Spinner } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MaterialTable from 'material-table';\nimport NavBar from '../components/navBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderList = props => {\n  _s();\n\n  const [orders, SetOrders] = useState(null);\n  const [dbError, setDbError] = useState(false);\n\n  const getOrders = async () => {\n    const data = await getAllOrders();\n\n    if (data) {\n      SetOrders(data);\n    } else {\n      setDbError(true);\n    }\n  };\n\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  const handleCloseSnack = () => {\n    setSnackBarOpen(false);\n  };\n\n  const columns = [{\n    title: \"Order Number\",\n    field: 'name'\n  }, {\n    title: \"Total Price\",\n    field: 'totalPrice'\n  }, {\n    title: \"Price Payed\",\n    field: 'totalPricePayed'\n  }, {\n    title: \"Payment Type\",\n    field: 'paymentType'\n  }, {\n    title: \"Order Status\",\n    field: 'status'\n  }, {\n    title: \"Payment Status\",\n    field: 'paymentSatus'\n  }, {\n    title: \"Is Active\",\n    field: 'isActive',\n    render: rowData => {\n      if (rowData.isActive) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green',\n            fontWeight: \"bolder\"\n          },\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red',\n            fontWeight: \"bolder\"\n          },\n          children: \"InActive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this);\n      }\n    }\n  }, {\n    editable: 'never',\n    render: rowData => /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        props.history.replace({\n          pathname: '/orders/details',\n          state: rowData\n        });\n        console.log(rowData._id);\n      },\n      children: \"View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 35\n    }, this)\n  }];\n  useEffect(() => {\n    getOrders();\n    setDbError(false); // eslint-disable-next-line react-hooks/exhaustive-deps      \n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), orders ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Orders Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(MaterialTable, {\n        style: {\n          marginTop: '15px'\n        },\n        title: \"\",\n        data: orders,\n        columns: columns // actions={ [\n        //     {\n        //         icon: 'edit',\n        //         tooltip: 'Edit Order',\n        //         onClick: async (event, rowData) => {\n        //             // editActive(rowData)\n        //         }\n        //     }\n        // ]}\n        // editable={{\n        //     onRowDelete: selectedRow => new Promise(async (resolve, reject) => {\n        //         const id = selectedRow._id\n        //         console.log(id)\n        //     }),\n        // }}\n        ,\n        options: {\n          actionsColumnIndex: -1,\n          showFirstLastPageButtons: false,\n          pageSizeOptions: [5, 10, 20, 50]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackBarOpen,\n        message: \"Successfully Deleted\",\n        autoHideDuration: 3500,\n        onClose: handleCloseSnack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : dbError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '100px',\n        marginTop: '300px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          display: 'block',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          textAlign: 'center'\n        },\n        children: [\"Looks like Server Down!!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/orders\",\n          children: \"Try Reloading the page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '100px',\n        marginTop: '300px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        style: {\n          display: 'block',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          height: '50px',\n          width: '50px'\n        },\n        animation: \"border\",\n        variant: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          display: 'block',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          textAlign: 'center'\n        },\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderList, \"p616ONO+mrJoeOp/UEv/TZsPwWE=\");\n\n_c = OrderList;\nexport default OrderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"sources":["/Users/mac/dev/store2/admin/src/orders/orderList.js"],"names":["React","useEffect","useState","getAllOrders","Button","Spinner","Snackbar","MaterialTable","NavBar","OrderList","props","orders","SetOrders","dbError","setDbError","getOrders","data","snackBarOpen","setSnackBarOpen","handleCloseSnack","columns","title","field","render","rowData","isActive","color","fontWeight","editable","history","replace","pathname","state","console","log","_id","marginTop","actionsColumnIndex","showFirstLastPageButtons","pageSizeOptions","width","height","display","marginLeft","marginRight","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,YAAR,QAA2B,0BAA3B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAA+B,iBAA/B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AACA,OAAO,MAAMC,SAAS,GAAEC,KAAD,IAAS;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBV,QAAQ,CAAC,IAAD,CAAnC;AACA,QAAM,CAACW,OAAD,EAASC,UAAT,IAAuBZ,QAAQ,CAAC,KAAD,CAArC;;AACA,QAAMa,SAAS,GAAC,YAAS;AACrB,UAAMC,IAAI,GAAG,MAAMb,YAAY,EAA/B;;AACA,QAAGa,IAAH,EAAQ;AACJJ,MAAAA,SAAS,CAACI,IAAD,CAAT;AACH,KAFD,MAGI;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,GARD;;AASA,QAAM,CAACG,YAAD,EAAcC,eAAd,IAAiChB,QAAQ,CAAC,KAAD,CAA/C;;AACA,QAAMiB,gBAAgB,GAAC,MAAI;AACvBD,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH,GAFD;;AAGA,QAAME,OAAO,GAAE,CACX;AAAEC,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GADW,EAEX;AAAED,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,KAAK,EAAE;AAA/B,GAFW,EAGX;AAAED,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,KAAK,EAAE;AAA/B,GAHW,EAIX;AAAED,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAJW,EAKX;AAAED,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GALW,EAMX;AAAED,IAAAA,KAAK,EAAE,gBAAT;AAA2BC,IAAAA,KAAK,EAAE;AAAlC,GANW,EAOX;AACID,IAAAA,KAAK,EAAE,WADX;AACwBC,IAAAA,KAAK,EAAE,UAD/B;AAEIC,IAAAA,MAAM,EAAEC,OAAO,IAAI;AACf,UAAIA,OAAO,CAACC,QAAZ,EAAsB;AACd,4BACI;AAAG,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,UAAU,EAAE;AAA9B,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGP,OAJD,MAKK;AACD,4BACI;AAAG,UAAA,KAAK,EAAE;AAAED,YAAAA,KAAK,EAAE,KAAT;AAAgBC,YAAAA,UAAU,EAAE;AAA5B,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH;AACJ;AAbL,GAPW,EAsBX;AACIC,IAAAA,QAAQ,EAAE,OADd;AAEIL,IAAAA,MAAM,EAAGC,OAAD,iBAAc,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MACpC;AACCd,QAAAA,KAAK,CAACmB,OAAN,CAAcC,OAAd,CAAsB;AAClBC,UAAAA,QAAQ,EAAE,iBADQ;AAElBC,UAAAA,KAAK,EAACR;AAFY,SAAtB;AAIAS,QAAAA,OAAO,CAACC,GAAR,CAAYV,OAAO,CAACW,GAApB;AACA,OAPkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAF1B,GAtBW,CAAf;AAoCAlC,EAAAA,SAAS,CAAC,MAAI;AACVc,IAAAA,SAAS;AACTD,IAAAA,UAAU,CAAC,KAAD,CAAV,CAFU,CAGb;AACA,GAJQ,EAIP,CAACJ,KAAD,CAJO,CAAT;AAMA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,MAAM,gBACX;AAAA,8BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAL,eAEI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAE;AAAEyB,UAAAA,SAAS,EAAE;AAAb,SAAtB;AAA6C,QAAA,KAAK,EAAC,EAAnD;AAAsD,QAAA,IAAI,EAAEzB,MAA5D;AACJ,QAAA,OAAO,EAAES,OADL,CAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBI;AAkBJ,QAAA,OAAO,EAAE;AACLiB,UAAAA,kBAAkB,EAAE,CAAC,CADhB;AAELC,UAAAA,wBAAwB,EAAE,KAFrB;AAGLC,UAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ;AAHZ;AAlBL;AAAA;AAAA;AAAA;AAAA,cAFJ,eA2BJ,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEtB,YAAhB;AAA8B,QAAA,OAAO,EAAC,sBAAtC;AACA,QAAA,gBAAgB,EAAE,IADlB;AACwB,QAAA,OAAO,EAAEE;AADjC;AAAA;AAAA;AAAA;AAAA,cA3BI;AAAA;AAAA;AAAA;AAAA;AAAA,YADW,GAiCfN,OAAO,gBACP;AAAK,MAAA,KAAK,EAAE;AAAC2B,QAAAA,KAAK,EAAC,MAAP;AAAcC,QAAAA,MAAM,EAAC,OAArB;AAA6BL,QAAAA,SAAS,EAAC;AAAvC,OAAZ;AAAA,6BAEA;AAAG,QAAA,KAAK,EAAE;AAACM,UAAAA,OAAO,EAAC,OAAT;AAAiBC,UAAAA,UAAU,EAAC,MAA5B;AACVC,UAAAA,WAAW,EAAC,MADF;AACSC,UAAAA,SAAS,EAAC;AADnB,SAAV;AAAA,4DAEA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAEK;AAAG,UAAA,IAAI,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YADO,gBAWP;AAAK,MAAA,KAAK,EAAE;AAACL,QAAAA,KAAK,EAAC,MAAP;AAAcC,QAAAA,MAAM,EAAC,OAArB;AAA6BL,QAAAA,SAAS,EAAC;AAAvC,OAAZ;AAAA,8BACA,QAAC,OAAD;AAAU,QAAA,KAAK,EAAE;AAACM,UAAAA,OAAO,EAAC,OAAT;AAAiBC,UAAAA,UAAU,EAAC,MAA5B;AACjBC,UAAAA,WAAW,EAAC,MADK;AACEH,UAAAA,MAAM,EAAC,MADT;AACgBD,UAAAA,KAAK,EAAC;AADtB,SAAjB;AACgD,QAAA,SAAS,EAAC,QAD1D;AACmE,QAAA,OAAO,EAAC;AAD3E;AAAA;AAAA;AAAA;AAAA,cADA,eAGA;AAAG,QAAA,KAAK,EAAE;AAACE,UAAAA,OAAO,EAAC,OAAT;AAAiBC,UAAAA,UAAU,EAAC,MAA5B;AACVC,UAAAA,WAAW,EAAC,MADF;AACSC,UAAAA,SAAS,EAAC;AADnB,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9CI;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyDH,CAnHM;;GAAMpC,S;;KAAAA,S;AAoHb,eAAeA,SAAf","sourcesContent":["import React,{useEffect, useState} from 'react'\nimport {getAllOrders} from '../services/orderService'\nimport { Button ,Spinner} from 'react-bootstrap'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MaterialTable from 'material-table'\nimport NavBar from '../components/navBar'\nexport const OrderList=(props)=>{\n    const [orders,SetOrders] = useState(null)\n    const [dbError,setDbError] = useState(false)\n    const getOrders=async()=>{\n        const data = await getAllOrders()\n        if(data){\n            SetOrders(data)\n        }\n        else{\n            setDbError(true)\n        }\n    }\n    const [snackBarOpen,setSnackBarOpen] = useState(false)\n    const handleCloseSnack=()=>{\n        setSnackBarOpen(false)\n    }\n    const columns= [\n        { title: \"Order Number\", field: 'name' },\n        { title: \"Total Price\", field: 'totalPrice' },\n        { title: \"Price Payed\", field: 'totalPricePayed' },\n        { title: \"Payment Type\", field: 'paymentType' },\n        { title: \"Order Status\", field: 'status' },\n        { title: \"Payment Status\", field: 'paymentSatus' },\n        {\n            title: \"Is Active\", field: 'isActive',\n            render: rowData => {\n                if (rowData.isActive) {\n                        return (\n                            <p style={{ color: 'green', fontWeight: \"bolder\" }}>Active</p>\n                                 )\n                }\n                else {\n                    return (\n                        <p style={{ color: 'red', fontWeight: \"bolder\" }}>InActive</p>\n                            )\n                }\n            }\n        },\n        {\n            editable: 'never',\n            render: (rowData) => (<Button onClick={() => \n               {\n                props.history.replace({\n                    pathname: '/orders/details',\n                    state:rowData \n                  })\n                console.log(rowData._id)\n               }\n            }>View</Button>)\n         },\n        \n    ]\n    useEffect(()=>{\n        getOrders()\n        setDbError(false)\n     // eslint-disable-next-line react-hooks/exhaustive-deps      \n    },[props])\n\n    return(\n        <div>\n            <NavBar></NavBar>\n            {orders ?\n        <div><h3>Orders Page</h3>\n           \n            <MaterialTable style={{ marginTop: '15px' }} title='' data={orders}\n        columns={columns}\n        // actions={ [\n        //     {\n        //         icon: 'edit',\n        //         tooltip: 'Edit Order',\n        //         onClick: async (event, rowData) => {\n        //             // editActive(rowData)\n        //         }\n        //     }\n           \n        // ]}\n        // editable={{\n        //     onRowDelete: selectedRow => new Promise(async (resolve, reject) => {\n        //         const id = selectedRow._id\n        //         console.log(id)\n        //     }),\n        // }}\n        options={{\n            actionsColumnIndex: -1,\n            showFirstLastPageButtons: false,\n            pageSizeOptions: [5, 10, 20, 50]\n        }}\n    >\n    </MaterialTable> \n    <Snackbar open={snackBarOpen} message=\"Successfully Deleted\" \n    autoHideDuration={3500} onClose={handleCloseSnack}>\n\n</Snackbar>\n            </div>   :\n    dbError ? \n    <div style={{width:'100%',height:'100px',marginTop:'300px'}} >\n    \n    <p style={{display:'block',marginLeft:'auto',\n    marginRight:'auto',textAlign:'center'}}>Looks like Server Down!!\n    <br/><a href=\"/orders\">\n    Try Reloading the page\n    </a></p>\n    \n    </div>\n    :\n    <div style={{width:'100%',height:'100px',marginTop:'300px'}} >\n    <Spinner  style={{display:'block',marginLeft:'auto',\n    marginRight:'auto',height:'50px',width:'50px'}} animation=\"border\" variant=\"primary\" />\n    <p style={{display:'block',marginLeft:'auto',\n    marginRight:'auto',textAlign:'center'}}>Loading</p>\n    </div>\n            \n        }\n        </div>\n    )\n}\nexport default OrderList"]},"metadata":{},"sourceType":"module"}