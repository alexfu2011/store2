{"ast":null,"code":"import * as axios from 'axios';\nimport { url, jwt, userId } from './../constants/auth';\nexport const addTag = async (tag, value) => {\n  try {\n    const data = await axios.post(url + '/add/tag/' + userId, {\n      tag: tag,\n      \"jwtToken\": jwt\n    }); // console.log('Tagd',data)\n\n    if (!data.data.error && !value) {\n      return data.data.tag;\n    } else if (!data.data.error && value) {\n      return true;\n    }\n  } catch (err) {\n    if (err) {\n      return false;\n    } // console.log(\"error in add variant\",err)\n\n  }\n};\nexport const getAllTag = async () => {\n  try {\n    const data = await axios.get(url + '/all/tag');\n\n    if (!data.data.error) {\n      return data.data.tags;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteTag = async tagId => {\n  console.log(tagId);\n\n  try {\n    const data = await axios.put(url + '/delete/tag/' + userId + '/' + tagId, {\n      \"jwtToken\": jwt\n    }); // console.log(data)\n\n    if (!data.data.error) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateTag = async tag => {\n  console.log(tag);\n\n  try {\n    const data = await axios.put(url + '/update/tag/' + userId + '/' + tag._id, {\n      \"jwtToken\": jwt,\n      tag: tag.tag,\n      isActive: tag.isActive\n    }); // console.log(data)\n\n    if (!data.data.error) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/mac/dev/store2/admin/src/services/tagService.js"],"names":["axios","url","jwt","userId","addTag","tag","value","data","post","error","err","getAllTag","get","tags","console","log","deleteTag","tagId","put","updateTag","_id","isActive"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,GAAR,EAAYC,GAAZ,EAAgBC,MAAhB,QAA6B,qBAA7B;AAGA,OAAO,MAAMC,MAAM,GAAG,OAAMC,GAAN,EAAUC,KAAV,KAAkB;AAEpC,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAWP,GAAG,GAAC,WAAJ,GAAgBE,MAA3B,EACnB;AACGE,MAAAA,GAAG,EAACA,GADP;AAEI,kBAAYH;AAFhB,KADmB,CAAnB,CADA,CAMJ;;AAEA,QAAG,CAACK,IAAI,CAACA,IAAL,CAAUE,KAAX,IAAoB,CAACH,KAAxB,EAA8B;AAE1B,aAAOC,IAAI,CAACA,IAAL,CAAUF,GAAjB;AACH,KAHD,MAIK,IAAG,CAACE,IAAI,CAACA,IAAL,CAAUE,KAAX,IAAoBH,KAAvB,EAA6B;AAC9B,aAAO,IAAP;AACH;AACA,GAfD,CAgBA,OAAMI,GAAN,EAAU;AACN,QAAGA,GAAH,EAAO;AACH,aAAO,KAAP;AACH,KAHK,CAIN;;AACH;AAEJ,CAzBM;AA2BP,OAAO,MAAMC,SAAS,GAAG,YAAS;AAC9B,MAAG;AACC,UAAMJ,IAAI,GAAG,MAAMP,KAAK,CAACY,GAAN,CAAUX,GAAG,GAAC,UAAd,CAAnB;;AACA,QAAI,CAACM,IAAI,CAACA,IAAL,CAAUE,KAAf,EAAqB;AACjB,aAAOF,IAAI,CAACA,IAAL,CAAUM,IAAjB;AACH;AACJ,GALD,CAMA,OAAMJ,KAAN,EAAY;AACRK,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH;AACJ,CAVM;AAWP,OAAO,MAAMO,SAAS,GAAC,MAAMC,KAAN,IAAc;AACjCH,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;;AACA,MAAG;AACC,UAAMV,IAAI,GAAG,MAAMP,KAAK,CAACkB,GAAN,CAAUjB,GAAG,GAAC,cAAJ,GAAmBE,MAAnB,GAA0B,GAA1B,GAA8Bc,KAAxC,EAA8C;AAC7D,kBAAYf;AADiD,KAA9C,CAAnB,CADD,CAIC;;AACA,QAAI,CAACK,IAAI,CAACA,IAAL,CAAUE,KAAf,EAAqB;AACjB,aAAO,IAAP;AACH,KAFD,MAGI;AACA,aAAO,KAAP;AACH;AACJ,GAXD,CAYA,OAAMA,KAAN,EAAY;AACRK,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH;AACJ,CAjBM;AAkBP,OAAO,MAAMU,SAAS,GAAC,MAAMd,GAAN,IAAY;AAC/BS,EAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;;AACA,MAAG;AACC,UAAME,IAAI,GAAG,MAAMP,KAAK,CAACkB,GAAN,CAAUjB,GAAG,GAAC,cAAJ,GAAmBE,MAAnB,GAA0B,GAA1B,GAA8BE,GAAG,CAACe,GAA5C,EAAgD;AAC/D,kBAAYlB,GADmD;AAE/DG,MAAAA,GAAG,EAACA,GAAG,CAACA,GAFuD;AAG/DgB,MAAAA,QAAQ,EAAChB,GAAG,CAACgB;AAHkD,KAAhD,CAAnB,CADD,CAMC;;AACA,QAAI,CAACd,IAAI,CAACA,IAAL,CAAUE,KAAf,EAAqB;AACjB,aAAO,IAAP;AACH,KAFD,MAGI;AACA,aAAO,KAAP;AACH;AACJ,GAbD,CAcA,OAAMA,KAAN,EAAY;AACRK,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH;AACJ,CAnBM","sourcesContent":["import * as axios from 'axios'\nimport {url,jwt,userId} from './../constants/auth'\n\n\nexport const addTag = async(tag,value)=>{\n    \n    try {\n        const data = await axios.post(url+'/add/tag/'+userId, \n        {\n           tag:tag,\n            \"jwtToken\": jwt\n    })\n    // console.log('Tagd',data)\n    \n    if(!data.data.error && !value){\n        \n        return data.data.tag\n    }\n    else if(!data.data.error && value){\n        return true\n    }\n    }\n    catch(err){\n        if(err){\n            return false\n        }\n        // console.log(\"error in add variant\",err)\n    }\n    \n}\n\nexport const getAllTag = async()=>{\n    try{\n        const data = await axios.get(url+'/all/tag')\n        if (!data.data.error){\n            return data.data.tags\n        }\n    }\n    catch(error){\n        console.log(error)\n    }\n}\nexport const deleteTag=async(tagId)=>{\n    console.log(tagId)\n    try{\n        const data = await axios.put(url+'/delete/tag/'+userId+'/'+tagId,{\n            \"jwtToken\": jwt\n        })\n        // console.log(data)\n        if (!data.data.error){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n    catch(error){\n        console.log(error)\n    }\n}\nexport const updateTag=async(tag)=>{\n    console.log(tag)\n    try{\n        const data = await axios.put(url+'/update/tag/'+userId+'/'+tag._id,{\n            \"jwtToken\": jwt,\n            tag:tag.tag,\n            isActive:tag.isActive\n        })\n        // console.log(data)\n        if (!data.data.error){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n    catch(error){\n        console.log(error)\n    }\n}"]},"metadata":{},"sourceType":"module"}