{"ast":null,"code":"var _jsxFileName = \"/Users/mac/dev/store2/admin/src/category/categoryList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { getAllCategory, deleteCategory, deleteSubCategory } from './../services/categoryService';\nimport { Button, Spinner } from 'react-bootstrap';\nimport './categoryList.css';\nimport CategoryForm from './categoryForm';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport NavBar from './../components/navBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CategoryList = props => {\n  _s();\n\n  const [categoryList, setCategoryList] = useState(null);\n  const [modalShow, setModalShow] = useState(false);\n  const [isEditCategory, setIsEditCategory] = useState(false);\n  const [editCategory, setEditCategory] = useState([]);\n  const [dbError, setDbError] = useState(false);\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  const handleCloseSnack = () => {\n    setSnackBarOpen(false);\n  };\n\n  const columns = [{\n    title: \"Category Name\",\n    field: 'name'\n  }, {\n    title: \"Is Active\",\n    field: 'isActive',\n    render: rowData => {\n      if (rowData.isActive) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green',\n            fontWeight: \"bolder\"\n          },\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red',\n            fontWeight: \"bolder\"\n          },\n          children: \"InActive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this);\n      }\n    }\n  }];\n\n  const modalOpen = () => {\n    setModalShow(true);\n  };\n\n  const modalClose = () => {\n    setModalShow(false);\n    setTimeout(() => {\n      setIsEditCategory(false);\n    }, 2000);\n  };\n\n  const onSave = async () => {\n    setModalShow(false);\n    setTimeout(() => {\n      setIsEditCategory(false);\n    }, 2000);\n    getCategory();\n  };\n\n  const editActive = data => {\n    setEditCategory(data); // console.log(data)\n\n    setIsEditCategory(true);\n    setModalShow(true);\n  }; // const view=()=> {\n  //     console.log('DB List', categoryList)\n  //     console.log('Edit List',editCategory)\n  //     console.log('isEdit', isEditCategory)\n  // }\n\n\n  const getCategory = async () => {\n    const data = await getAllCategory();\n    console.log(\"Cat\", data);\n\n    if (data) {\n      setCategoryList(data);\n    } else {\n      setDbError(true);\n    }\n  };\n\n  const subCategoryColumn = [{\n    title: \"Name\",\n    field: 'name'\n  }, {\n    title: \"Is Active\",\n    field: 'isActive',\n    render: rowData => {\n      if (rowData.isActive) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green',\n            fontWeight: \"bolder\"\n          },\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red',\n            fontWeight: \"bolder\"\n          },\n          children: \"InActive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this);\n      }\n    }\n  }];\n  useEffect(() => {\n    getCategory();\n    setDbError(false);\n    setSnackBarOpen(false); // eslint-disable-next-line react-hooks/exhaustive-deps      \n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), categoryList ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          margin: '10px 30px'\n        },\n        onClick: () => modalOpen(),\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          margin: '10px 30px'\n        },\n        onClick: () => props.history.push('/category/addSubCategory'),\n        children: \"Add SubCategory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), categoryList && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table\",\n        children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n          style: {\n            marginTop: '15px'\n          },\n          title: \"Category\",\n          data: categoryList,\n          columns: columns,\n          actions: [{\n            icon: 'edit',\n            tooltip: 'Edit category',\n            onClick: async (event, rowData) => {\n              editActive(rowData);\n            }\n          }],\n          editable: {\n            onRowDelete: selectedRow => new Promise(async (resolve, reject) => {\n              const id = selectedRow._id;\n              const data = await deleteCategory(id);\n\n              if (data) {\n                setSnackBarOpen(true);\n                setTimeout(() => {\n                  getCategory();\n                  resolve();\n                }, 2000);\n              }\n            })\n          },\n          options: {\n            actionsColumnIndex: -1,\n            showFirstLastPageButtons: false,\n            pageSizeOptions: [5, 10, 20, 50],\n            detailPanelColumnAlignment: 'right'\n          },\n          detailPanel: [{\n            icon: 'expand_more',\n            tooltip: 'Show Sub-Category',\n            onRowClick: async (event, rowData) => {\n              console.log(rowData);\n            },\n            render: rowData => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {},\n                children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n                  style: {\n                    border: \"3px solid #067BFD\"\n                  },\n                  title: \"Sub Category\",\n                  columns: subCategoryColumn,\n                  data: rowData.subCategories,\n                  options: {\n                    search: false,\n                    toolbar: false,\n                    paging: false,\n                    actionsColumnIndex: -1\n                  },\n                  actions: [{\n                    icon: 'edit',\n                    tooltip: 'Edit sub Category',\n                    onClick: async (event, rowData) => {\n                      console.log(rowData);\n                      props.history.replace({\n                        pathname: '/category/addSubCategory',\n                        state: rowData\n                      });\n                    }\n                  }],\n                  editable: {\n                    onRowDelete: selectedRow => new Promise(async (resolve, reject) => {\n                      const id = selectedRow._id;\n                      const data = await deleteSubCategory(id);\n\n                      if (data) {\n                        setSnackBarOpen(true);\n                        setTimeout(() => {\n                          getCategory();\n                          resolve();\n                        }, 1000);\n                      }\n                    })\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 23\n              }, this);\n            }\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CategoryForm, {\n        onHide: () => {\n          modalClose();\n        },\n        show: modalShow,\n        onSave: () => {\n          onSave();\n        },\n        isEdit: isEditCategory,\n        editCategory: editCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackBarOpen,\n        message: \"Successfully Deleted\",\n        autoHideDuration: 3500,\n        onClose: handleCloseSnack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this) : dbError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '100px',\n        marginTop: '300px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          display: 'block',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          textAlign: 'center'\n        },\n        children: [\"Looks like Server Down!!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/category\",\n          children: \"Try Reloading the page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '100px',\n        marginTop: '300px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        style: {\n          display: 'block',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          height: '50px',\n          width: '50px'\n        },\n        animation: \"border\",\n        variant: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          display: 'block',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          textAlign: 'center'\n        },\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CategoryList, \"G3A545o97koKS+GAzTlKyapNoBQ=\");\n\n_c = CategoryList;\nexport default CategoryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryList\");","map":{"version":3,"sources":["/Users/mac/dev/store2/admin/src/category/categoryList.js"],"names":["React","useState","useEffect","MaterialTable","getAllCategory","deleteCategory","deleteSubCategory","Button","Spinner","CategoryForm","Snackbar","NavBar","CategoryList","props","categoryList","setCategoryList","modalShow","setModalShow","isEditCategory","setIsEditCategory","editCategory","setEditCategory","dbError","setDbError","snackBarOpen","setSnackBarOpen","handleCloseSnack","columns","title","field","render","rowData","isActive","color","fontWeight","modalOpen","modalClose","setTimeout","onSave","getCategory","editActive","data","console","log","subCategoryColumn","margin","history","push","marginTop","icon","tooltip","onClick","event","onRowDelete","selectedRow","Promise","resolve","reject","id","_id","actionsColumnIndex","showFirstLastPageButtons","pageSizeOptions","detailPanelColumnAlignment","onRowClick","border","subCategories","search","toolbar","paging","replace","pathname","state","width","height","display","marginLeft","marginRight","textAlign"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\nimport MaterialTable from 'material-table'\nimport { getAllCategory,deleteCategory ,deleteSubCategory} from './../services/categoryService'\nimport { Button,Spinner } from 'react-bootstrap'\nimport './categoryList.css'\nimport CategoryForm from './categoryForm'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport NavBar from './../components/navBar'\nexport const CategoryList = (props) => {\n    const [categoryList, setCategoryList] = useState(null)\n    const [modalShow, setModalShow] = useState(false)\n    const [isEditCategory, setIsEditCategory] = useState(false)\n    const [editCategory, setEditCategory] = useState([])\n    const [dbError,setDbError] = useState(false)\n    const [snackBarOpen,setSnackBarOpen] = useState(false)\n    const handleCloseSnack=()=>{\n        setSnackBarOpen(false)\n    }\n    const columns= [{ title: \"Category Name\", field: 'name' },\n        {\n            title: \"Is Active\", field: 'isActive',\n            render: rowData => {\n                if (rowData.isActive) {\n                        return (\n                            <p style={{ color: 'green', fontWeight: \"bolder\" }}>Active</p>\n                                 )\n                }\n                else {\n                    return (\n                        <p style={{ color: 'red', fontWeight: \"bolder\" }}>InActive</p>\n                            )\n                }\n            }\n        },\n    ]\n\n\nconst modalOpen=()=> {\n\n   setModalShow(true)\n\n}\nconst modalClose=()=> {\n    setModalShow(false)\n    setTimeout(() => {\n        setIsEditCategory(false)\n    }, 2000);\n\n}\nconst onSave = async () => {\n   setModalShow(false)\n  setTimeout(() => {\n    setIsEditCategory(false)\n  }, 2000);\n   getCategory()\n\n}\n\nconst editActive=(data)=> {\n    setEditCategory(data)\n    // console.log(data)\n    setIsEditCategory(true)\n    setModalShow(true)\n\n}\n// const view=()=> {\n//     console.log('DB List', categoryList)\n//     console.log('Edit List',editCategory)\n//     console.log('isEdit', isEditCategory)\n// }\nconst getCategory=async()=>{\n    const data = await getAllCategory()\n    console.log(\"Cat\",data)\n   if(data){\n    setCategoryList(data)\n    \n   }\n   else{\n       setDbError(true)\n   }\n}\nconst subCategoryColumn=[{ title: \"Name\", field: 'name' },\n{\n    title: \"Is Active\", field: 'isActive',\n    render: rowData => {\n        if (rowData.isActive) {\n            return (\n                <p style={{ color: 'green', fontWeight: \"bolder\" }}>Active</p>\n            )\n        }\n        else {\n            return (\n                <p style={{ color: 'red', fontWeight: \"bolder\" }}>InActive</p>\n            )\n        }\n    }\n},\n                        ]\nuseEffect(()=>{\n    getCategory()\n    setDbError(false)\n    setSnackBarOpen(false)\n // eslint-disable-next-line react-hooks/exhaustive-deps      \n},[props])\n\n    return (\n        <div>\n            <NavBar></NavBar>\n            {categoryList?\n\n                <div>\n                    <Button style={{margin:'10px 30px'}} onClick={() => modalOpen()}>Add Category</Button>\n                    <Button style={{margin:'10px 30px'}} onClick={() => props.history.push('/category/addSubCategory')}>Add SubCategory</Button>\n{categoryList &&\n    <div className='table'>\n        <MaterialTable style={{ marginTop: '15px' }} title=\"Category\" data={categoryList}\n            columns={columns}\n            actions={[\n                {\n                    icon: 'edit',\n                    tooltip: 'Edit category',\n                    onClick: async (event, rowData) => {\n                        editActive(rowData)\n                    }\n                },\n            ]}\n            editable={{\n                onRowDelete: selectedRow => new Promise(async (resolve, reject) => {\n                    const id = selectedRow._id\n                    const data = await deleteCategory(id)\n                    if(data){\n                        setSnackBarOpen(true)\n                        setTimeout(() => {\n                            getCategory()\n                            resolve()\n                        }, 2000);\n                        \n                    }\n                }),\n            }}\n            options={{\n                actionsColumnIndex: -1,\n                showFirstLastPageButtons: false,\n                pageSizeOptions: [5, 10, 20, 50],\n                detailPanelColumnAlignment:'right'\n            }}\n            \n            detailPanel={[\n                {\n                    icon:'expand_more',\n                  tooltip: 'Show Sub-Category',\n                  onRowClick: async (event, rowData) => {\n                    console.log(rowData)\n                },\n                  render: rowData => {\n                    return (\n                      <div\n                        style={{\n                        }}\n                      >\n                        <MaterialTable style={{border:\"3px solid #067BFD\"}} title='Sub Category' columns={subCategoryColumn} data={rowData.subCategories}\n                       options={{\n                        search: false,\n                        toolbar:false,\n                        paging:false,\n                        actionsColumnIndex:-1\n                      }}\n                      actions={[\n                        {\n                            icon: 'edit',\n                            tooltip: 'Edit sub Category',\n                            onClick: async (event, rowData) => {\n                                console.log(rowData)\n                                props.history.replace({\n                                    pathname: '/category/addSubCategory',\n                                    state: rowData \n                                  })\n                            }\n                        },\n                    ]}\n                    editable={{\n                        onRowDelete: selectedRow => new Promise(async (resolve, reject) => {\n                            const id = selectedRow._id\n                            const data = await deleteSubCategory(id)\n                            if(data){\n                                setSnackBarOpen(true)\n                                setTimeout(() => {\n                                    getCategory()\n                                    resolve()\n                                }, 1000);\n                                \n                            }\n                        }),\n                    }}\n                        ></MaterialTable>\n                      </div>\n                    )\n                  },\n                },\n               \n              ]}\n        >\n        </MaterialTable>\n    </div>\n}\n\n<CategoryForm\n    onHide={() => {\n        modalClose()\n    }}\n    show={modalShow}\n    onSave={() => {onSave() }}\n    isEdit={isEditCategory}\n    editCategory={editCategory}\n></CategoryForm>\n<Snackbar open={snackBarOpen} message=\"Successfully Deleted\" \n            autoHideDuration={3500} onClose={handleCloseSnack}>\n       \n       </Snackbar>\n                </div>\n: \ndbError ? \n<div style={{width:'100%',height:'100px',marginTop:'300px'}} >\n\n<p style={{display:'block',marginLeft:'auto',\nmarginRight:'auto',textAlign:'center'}}>Looks like Server Down!!\n<br/><a href=\"/category\">\nTry Reloading the page\n</a></p>\n\n</div>\n:\n<div style={{width:'100%',height:'100px',marginTop:'300px'}} >\n<Spinner  style={{display:'block',marginLeft:'auto',\nmarginRight:'auto',height:'50px',width:'50px'}} animation=\"border\" variant=\"primary\" />\n<p style={{display:'block',marginLeft:'auto',\nmarginRight:'auto',textAlign:'center'}}>Loading</p>\n</div>\n        \n            }\n        </div>\n    )\n\n}\nexport default CategoryList"]},"metadata":{},"sourceType":"module"}