{"ast":null,"code":"var _jsxFileName = \"/Users/mac/dev/store2/admin/src/products/productEditForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Col, Collapse, Button, Spinner } from 'react-bootstrap';\nimport { getAllTags, addProduct, editProduct } from './../services/productService';\nimport { getAllCategory, getAllSubCategory } from './../services/categoryService';\nimport { BsTrashFill } from \"react-icons/bs\"; // import { VariantForm } from './variantForm'\n// import MaterialTable from 'material-table'\n\nimport { addTag } from './../services/tagService';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductForm = props => {\n  _s();\n\n  const styles = {\n    margin: \"20px 50px\"\n  };\n  const [open, setOpen] = useState(false); // const columns = [{ title: \"Color\", field: 'color' },\n  // { title: \"Size\", field: 'size' },\n  // { title: \"Price\", field: 'price' },\n  // { title: \"Stock\", field: 'stock' },\n  // ]\n\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  const handleCloseSnack = () => {\n    setSnackBarOpen(false);\n  }; // const [editImage, setEditImage] = useState([])\n  // const [editVariant, setEditVariant] = useState({})\n  // const [isVariantEdit, setIsVariantEdit] = useState(false)\n  // const [modalShow, setModalShow] = React.useState(false);\n\n\n  const [gallery, setGallery] = useState([]);\n  const [tag, setTag] = useState([]);\n  const [tagNew, setTagNew] = useState([]);\n  const [tagInput, setTagInput] = useState('');\n  const [subCategory, setSubCategory] = useState(null);\n  const [category, setCategory] = useState(null); // const [variant, setVariant] = useState([])\n  // const [variantId, setVariantId] = useState([])\n\n  const [formf, setForm] = useState({\n    url: ''\n  });\n  const [isEdit, setIsEdit] = useState(false);\n  const [tagId, setTagId] = useState([]);\n  const [nullTag, setNullTag] = useState(false);\n  const [tagRequired, setTagRequired] = useState(false); // const {edit} = props.location.state\n\n  const getValues = async () => {\n    try {\n      const category = await getAllCategory();\n      setCategory(category);\n      const tag = await getAllTags();\n\n      if (props.location.state) {\n        setTagId(props.location.state.tagId); //const data = await tag.filter(item => {\n        //    return props.location.state.tagId.indexOf(item._id) === -1\n        //})\n        //setTag(data)\n      } else {\n        setTag(tag);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (!props.location.state) {\n      setIsEdit(false);\n    } else {\n      setForm(props.location.state); // setVariant(props.location.state.variants)\n\n      console.log(props.location.state);\n      setTagNew(props.location.state.tags);\n      setSub(props.location.state.category);\n      setGallery(props.location.state.gallery);\n      setIsEdit(true);\n    }\n  };\n\n  useEffect(() => {\n    getValues(); // setVariantRequired(false)\n\n    setTagRequired(false);\n    setValidated(false);\n    setStoreError(false); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // const tageditor=async(data)=>{\n  //    setTag(data)\n  // }\n  // const dataChooser = () => {\n  //     return variant\n  // }\n\n  const setSub = async value => {//const data = await getAllSubCategory(value)\n    //    console.log('-----------',data)\n    //    setSubCategory(data)\n  };\n\n  const setField = async (field, value) => {\n    if (field === 'category') {\n      console.log('foreds', field, value);\n      setSub(value);\n    }\n\n    setForm({ ...formf,\n      [field]: value\n    });\n  };\n\n  const tagEvent = e => {\n    setTagInput(e);\n    setNullTag(false);\n  };\n\n  const setImgArray = () => {\n    if (formf.url !== '') {\n      console.log(formf.url);\n      setGallery([...gallery, formf.url]);\n      setForm({ ...formf,\n        url: ''\n      });\n    }\n  };\n\n  const view = () => {\n    console.log('newtag', tagNew);\n    console.log('tagid', tagId);\n    console.log('----', formf);\n    console.log('oldtag', tag);\n    console.log(gallery);\n  }; // const ss = (data) => {\n  //     setVariantRequired(false)\n  //     setVariant(\n  //         data\n  //     )\n  //     setModalShow(false)\n  // }\n  // const s = (data) => {\n  //     setVariantRequired(false)\n  //     console.log('Saved',data)\n  //     setVariant([\n  //         ...variant,\n  //         data\n  //     ])\n  //     setVariantId([\n  //         ...variantId,\n  //         data._id])\n  //     setModalShow(false)\n  // }\n\n\n  const addTagHandler = async () => {\n    if (tagInput !== '') {\n      const data = await addTag(tagInput, false);\n      setTagNew([...tagNew, data]);\n      console.log(\"New Tag\", data);\n      setTagId([...tagId, data._id]);\n      setTagInput('');\n      setNullTag(false);\n    } else {\n      setNullTag(true);\n    }\n  };\n\n  const reduceTag = id => {\n    setTagId([...tagId, id]);\n    setTag(tag.filter(item => item._id !== id));\n  };\n\n  const popTag = id => {\n    setTagId(tagId.filter(item => item !== id));\n    setTagNew(tagNew.filter(item => item._id !== id));\n  };\n\n  const [validated, setValidated] = useState(false);\n  const [storeError, setStoreError] = useState(false); // const [variantRequired, setVariantRequired] = useState(false)\n\n  const handleSubmit = async event => {\n    const form = event.currentTarget;\n    console.log(tagId.length !== 0);\n\n    if (tagId.length !== 0 && gallery.length !== 0 && form.checkValidity() === true) {\n      event.preventDefault(); // setVariantRequired(false)\n\n      setTagRequired(false);\n\n      if (isEdit) {\n        // console.log('update')\n        const data = await editProduct(formf, props.location.state.id, gallery, tagId);\n\n        if (data) {\n          console.log('hi');\n          setSnackBarOpen(true);\n          setTimeout(() => {\n            props.history.push('/product/');\n          }, 1000);\n        } else {\n          setStoreError(true);\n        }\n      } else {\n        console.log('hi');\n        const data = await addProduct(formf, gallery, tagId);\n\n        if (data) {\n          setSnackBarOpen(true);\n          setTimeout(() => {\n            props.history.push('/product');\n          }, 1000);\n        } else {\n          setStoreError(true);\n        }\n      }\n    } else if (tagId.length === 0) {\n      // setVariantRequired(false)\n      setTagRequired(true);\n      event.preventDefault();\n    } else {\n      event.preventDefault();\n      setTagRequired(false); // setVariantRequired(true)\n    }\n\n    setValidated(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isEdit && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 26\n    }, this), isEdit && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        margin: '0px 5px'\n      },\n      onClick: () => {\n        props.history.push('/product');\n      },\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      style: styles,\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: formf.name,\n            onChange: e => setField('name', e.target.value),\n            placeholder: \"Enter Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Enter a Product Name.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Brand Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: formf.brandName,\n            onChange: e => setField('brandName', e.target.value),\n            placeholder: \"Enter Brand Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Enter a Brand Name.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Short Desription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: formf.shortDescription,\n            onChange: e => setField('shortDescription', e.target.value),\n            placeholder: \"Enter Short Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Enter short description.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Desription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: formf.description,\n            onChange: e => setField('description', e.target.value),\n            placeholder: \"Enter Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Enter description.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Sub Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            defaultValue: \"\",\n            value: formf.subCategory,\n            onChange: e => setField('subCategory', e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this), subCategory && subCategory.map(team => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: team._id,\n              children: team.name\n            }, team._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 71\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please  choose a Category.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"number\",\n            value: formf.price,\n            onChange: e => setField('price', e.target.value),\n            placeholder: \"Enter Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Enter price.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"number\",\n            value: formf.stock,\n            onChange: e => setField('stock', e.target.value),\n            placeholder: \"Enter Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Enter Stock.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Url\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: formf.url,\n            onChange: e => setField('url', e.target.value),\n            placeholder: \"Enter the url\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Enter the urStock.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setOpen(!open),\n              \"aria-controls\": \"example-collapse-text\",\n              \"aria-expanded\": open,\n              children: !open ? 'Edit Images' : 'close'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: open,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexWrap: 'wrap'\n              },\n              children: gallery && gallery.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '120px',\n                  borderRadius: '10%',\n                  border: '1px solid #777',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  margin: '10px',\n                  padding: \"5px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(BsTrashFill, {\n                  style: {\n                    marginLeft: '80px'\n                  },\n                  size: 30,\n                  onClick: () => {\n                    console.log(team._id);\n                    setGallery(gallery.filter(item => item !== team));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: team,\n                  height: \"100px\",\n                  width: \"100px\",\n                  alt: \"added_image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 67\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Model number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: formf.modelNumber,\n            onChange: e => setField('modelNumber', e.target.value),\n            placeholder: \"Enter Model Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Enter the model number.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Model Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: formf.modelName,\n            onChange: e => setField('modelName', e.target.value),\n            placeholder: \"Enter Model Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please Enter the model name.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Release Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"date\",\n            value: formf.releaseDate,\n            onChange: e => setField('releaseDate', e.target.value),\n            placeholder: \"Enter Release date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Choose the release date.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this), isEdit && /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            checked: formf.isActive === true,\n            type: \"radio\",\n            label: \"Active\",\n            name: \"formHorizontalRadios\",\n            onClick: () => setField('isActive', true),\n            id: \"formHorizontalRadios1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            checked: formf.isActive === false,\n            type: \"radio\",\n            label: \"InActive\",\n            onClick: () => setField('isActive', false),\n            name: \"formHorizontalRadios\",\n            id: \"formHorizontalRadios2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 21\n      }, this), storeError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: [\"Cannot \", isEdit ? 'Update' : 'Save', \" the data \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: isEdit ? 'Update' : 'Save'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          view();\n        },\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          margin: '10px'\n        },\n        onClick: () => {\n          props.history.push('/product');\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackBarOpen,\n      message: isEdit ? \"Successfully Updated\" : \"Successfully Added\",\n      autoHideDuration: 3500,\n      onClose: handleCloseSnack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductForm, \"RJ/zwDp4h+5NEwsSpDH6z3t2Ao4=\");\n\n_c = ProductForm;\nexport default ProductForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"sources":["/Users/mac/dev/store2/admin/src/products/productEditForm.js"],"names":["React","useState","useEffect","Form","Col","Collapse","Button","Spinner","getAllTags","addProduct","editProduct","getAllCategory","getAllSubCategory","BsTrashFill","addTag","Snackbar","ProductForm","props","styles","margin","open","setOpen","snackBarOpen","setSnackBarOpen","handleCloseSnack","gallery","setGallery","tag","setTag","tagNew","setTagNew","tagInput","setTagInput","subCategory","setSubCategory","category","setCategory","formf","setForm","url","isEdit","setIsEdit","tagId","setTagId","nullTag","setNullTag","tagRequired","setTagRequired","getValues","location","state","err","console","log","tags","setSub","setValidated","setStoreError","value","setField","field","tagEvent","e","setImgArray","view","addTagHandler","data","_id","reduceTag","id","filter","item","popTag","validated","storeError","handleSubmit","event","form","currentTarget","length","checkValidity","preventDefault","setTimeout","history","push","name","target","brandName","shortDescription","description","map","team","price","stock","display","flexWrap","width","borderRadius","border","flexDirection","padding","marginLeft","modelNumber","modelName","releaseDate","isActive","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Form, Col, Collapse, Button, Spinner } from 'react-bootstrap';\nimport { getAllTags, addProduct, editProduct } from './../services/productService'\nimport { getAllCategory, getAllSubCategory } from './../services/categoryService'\nimport { BsTrashFill } from \"react-icons/bs\";\n\n// import { VariantForm } from './variantForm'\n// import MaterialTable from 'material-table'\nimport { addTag } from './../services/tagService'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nexport const ProductForm = (props) => {\n\n    const styles = {\n        margin: \"20px 50px\"\n    }\n    const [open, setOpen] = useState(false);\n\n    // const columns = [{ title: \"Color\", field: 'color' },\n    // { title: \"Size\", field: 'size' },\n    // { title: \"Price\", field: 'price' },\n    // { title: \"Stock\", field: 'stock' },\n    // ]\n    const [snackBarOpen, setSnackBarOpen] = useState(false)\n    const handleCloseSnack = () => {\n        setSnackBarOpen(false)\n    }\n    // const [editImage, setEditImage] = useState([])\n    // const [editVariant, setEditVariant] = useState({})\n    // const [isVariantEdit, setIsVariantEdit] = useState(false)\n    // const [modalShow, setModalShow] = React.useState(false);\n    const [gallery, setGallery] = useState([])\n    const [tag, setTag] = useState([])\n    const [tagNew, setTagNew] = useState([])\n    const [tagInput, setTagInput] = useState('')\n    const [subCategory, setSubCategory] = useState(null)\n    const [category, setCategory] = useState(null)\n    // const [variant, setVariant] = useState([])\n    // const [variantId, setVariantId] = useState([])\n    const [formf, setForm] = useState({ url: '' })\n    const [isEdit, setIsEdit] = useState(false)\n    const [tagId, setTagId] = useState([])\n    const [nullTag, setNullTag] = useState(false)\n    const [tagRequired, setTagRequired] = useState(false)\n    // const {edit} = props.location.state\n    const getValues = async () => {\n\n        try {\n            const category = await getAllCategory()\n            setCategory(category)\n            const tag = await getAllTags()\n            if (props.location.state) {\n                setTagId(props.location.state.tagId)\n\n                //const data = await tag.filter(item => {\n                //    return props.location.state.tagId.indexOf(item._id) === -1\n                //})\n                //setTag(data)\n            }\n            else {\n                setTag(tag)\n            }\n        }\n        catch (err) {\n            console.log(err)\n\n        }\n        if (!props.location.state) {\n\n            setIsEdit(false)\n        }\n        else {\n            setForm(props.location.state)\n            // setVariant(props.location.state.variants)\n            console.log(props.location.state)\n            setTagNew(props.location.state.tags)\n            setSub(props.location.state.category)\n            setGallery(props.location.state.gallery)\n            setIsEdit(true)\n        }\n    }\n    useEffect(() => {\n        getValues()\n        // setVariantRequired(false)\n        setTagRequired(false)\n        setValidated(false)\n        setStoreError(false)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    // const tageditor=async(data)=>{\n    //    setTag(data)\n    // }\n    // const dataChooser = () => {\n\n    //     return variant\n    // }\n    const setSub = async (value) => {\n        //const data = await getAllSubCategory(value)\n        //    console.log('-----------',data)\n        //    setSubCategory(data)\n    }\n    const setField = async (field, value) => {\n        if (field === 'category') {\n            console.log('foreds', field, value)\n            setSub(value)\n        }\n        setForm({\n            ...formf,\n            [field]: value\n        })\n    }\n    const tagEvent = (e) => {\n        setTagInput(\n            e\n        )\n        setNullTag(false)\n\n    }\n    const setImgArray = () => {\n        if (formf.url !== '') {\n            console.log(formf.url)\n            setGallery([...gallery,\n            formf.url])\n            setForm({\n                ...formf,\n                url: ''\n            })\n        }\n    }\n    const view = () => {\n        console.log('newtag', tagNew)\n        console.log('tagid', tagId)\n        console.log('----', formf)\n        console.log('oldtag', tag)\n        console.log(gallery)\n    }\n    // const ss = (data) => {\n    //     setVariantRequired(false)\n    //     setVariant(\n    //         data\n    //     )\n    //     setModalShow(false)\n    // }\n    // const s = (data) => {\n    //     setVariantRequired(false)\n    //     console.log('Saved',data)\n    //     setVariant([\n    //         ...variant,\n    //         data\n    //     ])\n    //     setVariantId([\n    //         ...variantId,\n    //         data._id])\n    //     setModalShow(false)\n    // }\n    const addTagHandler = async () => {\n        if (tagInput !== '') {\n            const data = await addTag(tagInput, false)\n            setTagNew([\n                ...tagNew,\n                data\n            ])\n            console.log(\"New Tag\", data)\n            setTagId([\n                ...tagId,\n                data._id\n            ])\n            setTagInput('')\n            setNullTag(false)\n        }\n        else {\n            setNullTag(true)\n        }\n    }\n    const reduceTag = (id) => {\n        setTagId([\n            ...tagId,\n            id\n        ])\n        setTag(tag.filter(item => item._id !== id))\n    }\n    const popTag = (id) => {\n        setTagId(tagId.filter(item => item !== id))\n        setTagNew(tagNew.filter(item => item._id !== id))\n    }\n    const [validated, setValidated] = useState(false);\n    const [storeError, setStoreError] = useState(false);\n    // const [variantRequired, setVariantRequired] = useState(false)\n    const handleSubmit = async (event) => {\n        const form = event.currentTarget;\n        console.log(tagId.length !== 0)\n        if (tagId.length !== 0 && gallery.length !== 0 && form.checkValidity() === true) {\n\n            event.preventDefault();\n            // setVariantRequired(false)\n            setTagRequired(false)\n            if (isEdit) {\n                // console.log('update')\n                const data = await editProduct(formf, props.location.state.id, gallery, tagId)\n                if (data) {\n                    console.log('hi')\n                    setSnackBarOpen(true)\n                    setTimeout(() => {\n                        props.history.push('/product/')\n\n                    }, 1000);\n                }\n                else {\n                    setStoreError(true)\n                }\n            }\n            else {\n                console.log('hi')\n                const data = await addProduct(formf, gallery, tagId)\n                if (data) {\n                    setSnackBarOpen(true)\n                    setTimeout(() => {\n                        props.history.push('/product')\n\n                    }, 1000);\n\n                }\n                else {\n                    setStoreError(true)\n                }\n            }\n        }\n\n        else if (tagId.length === 0) {\n            // setVariantRequired(false)\n            setTagRequired(true)\n            event.preventDefault();\n        }\n        else {\n            event.preventDefault();\n            setTagRequired(false)\n            // setVariantRequired(true)\n        }\n        setValidated(true);\n    };\n\n\n    return (\n        <div>{!isEdit && <p>Add Product</p>}\n            {isEdit && <p>Update Product</p>}\n            <Button style={{ margin: '0px 5px' }} onClick={() => {\n                props.history.push('/product')\n            }}>\n                Back\n                    </Button>\n\n\n            <Form style={styles} noValidate validated={validated} onSubmit={handleSubmit}>\n                <Form.Row>\n                    <Form.Group as={Col} >\n                        <Form.Label>Product Name</Form.Label>\n                        <Form.Control required type=\"text\" value={formf.name} onChange={(e) => setField('name', e.target.value)} placeholder=\"Enter Product Name\" />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please Enter a Product Name.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} >\n                        <Form.Label>Brand Name</Form.Label>\n                        <Form.Control required type=\"text\" value={formf.brandName} onChange={(e) => setField('brandName', e.target.value)} placeholder=\"Enter Brand Name\" />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please Enter a Brand Name.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col}>\n                        <Form.Label>Short Desription</Form.Label>\n                        <Form.Control required type=\"text\" value={formf.shortDescription} onChange={(e) => setField('shortDescription', e.target.value)} placeholder=\"Enter Short Description\" />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please Enter short description.\n            </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col}>\n                        <Form.Label>Desription</Form.Label>\n                        <Form.Control required type=\"text\" value={formf.description} onChange={(e) => setField('description', e.target.value)} placeholder=\"Enter Description\" />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please Enter description.\n            </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col}>\n                        <Form.Label>Sub Category</Form.Label>\n                        <Form.Control required as=\"select\" defaultValue='' value={formf.subCategory} onChange={(e) => setField('subCategory', e.target.value)} >\n                            <option value=''>Select a Category</option>\n                            {subCategory && subCategory.map((team) => <option key={team._id} value={team._id}>{team.name}</option>)}\n\n                        </Form.Control>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please  choose a Category.\n            </Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col}>\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control required type=\"number\" value={formf.price} onChange={(e) => setField('price', e.target.value)} placeholder=\"Enter Price\" />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please Enter price.\n            </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col}>\n                        <Form.Label>Stock</Form.Label>\n                        <Form.Control required type=\"number\" value={formf.stock} onChange={(e) => setField('stock', e.target.value)} placeholder=\"Enter Stock\" />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please Enter Stock.\n            </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                        <Form.Label>Url</Form.Label>\n                        <Form.Control type=\"text\" value={formf.url} onChange={(e) => setField('url', e.target.value)} placeholder=\"Enter the url\" />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please Enter the urStock.\n            </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Row>\n                        <Form.Group as={Col}>\n                            <Button\n                                onClick={() => setOpen(!open)}\n                                aria-controls=\"example-collapse-text\"\n                                aria-expanded={open}\n                            >\n                                {!open ? 'Edit Images' : 'close'}\n                            </Button>\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Collapse in={open}>\n                        <div >\n                            <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n\n\n                                {gallery && gallery.map((team) => <div style={{\n                                    width: '120px', borderRadius: '10%', border: '1px solid #777',\n                                    display: 'flex', flexDirection: 'column',\n                                    margin: '10px', padding: \"5px\"\n                                }}>\n                                    <BsTrashFill style={{ marginLeft: '80px' }} size={30} onClick={() => {\n                                        console.log(team._id)\n                                        setGallery(gallery.filter(item => item !== team));\n                                    }} />\n                                    <img\n                                        src={team}\n                                        height=\"100px\"\n                                        width=\"100px\"\n                                        alt=\"added_image\"\n                                    />\n\n                                </div>\n                                )}\n                            </div>\n                        </div>\n                    </Collapse>\n\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} >\n                        <Form.Label> Model number</Form.Label>\n                        <Form.Control required type=\"text\" value={formf.modelNumber} onChange={(e) => setField('modelNumber', e.target.value)} placeholder=\"Enter Model Number\" />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please Enter the model number.\n            </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} >\n                        <Form.Label> Model Name</Form.Label>\n                        <Form.Control required type=\"text\" value={formf.modelName} onChange={(e) => setField('modelName', e.target.value)} placeholder=\"Enter Model Name\" />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please Enter the model name.\n            </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} >\n                        <Form.Label> Release Date</Form.Label>\n                        <Form.Control required type=\"date\" value={formf.releaseDate} onChange={(e) => setField('releaseDate', e.target.value)} placeholder=\"Enter Release date\" />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Choose the release date.\n            </Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n\n                {\n                    isEdit &&\n                    <Form.Row>\n                        <Form.Group as={Col} >\n                            <Form.Check checked={formf.isActive === true}\n                                type=\"radio\"\n                                label=\"Active\"\n                                name=\"formHorizontalRadios\"\n                                onClick={() => setField('isActive', true)}\n                                id=\"formHorizontalRadios1\"\n                            />\n                            <Form.Check checked={formf.isActive === false}\n                                type=\"radio\"\n                                label=\"InActive\"\n                                onClick={() => setField('isActive', false)}\n                                name=\"formHorizontalRadios\"\n                                id=\"formHorizontalRadios2\"\n                            />\n                        </Form.Group>\n                    </Form.Row>\n                }\n\n                {storeError && <p style={{ color: 'red' }}>Cannot {isEdit ? 'Update' : 'Save'} the data </p>}\n                <Button type='submit'>{isEdit ? 'Update' : 'Save'}</Button>\n                <Button onClick={() => {\n                    view()\n                }}>View</Button>\n\n                <Button style={{ margin: '10px' }} onClick={() => {\n                    props.history.push('/product')\n                }}>\n                    Close\n                    </Button>\n            </Form>\n\n\n            <Snackbar open={snackBarOpen} message={isEdit ? \"Successfully Updated\" : \"Successfully Added\"}\n                autoHideDuration={3500} onClose={handleCloseSnack}>\n\n            </Snackbar>\n\n\n        </div>\n    )\n}\nexport default ProductForm\n"]},"metadata":{},"sourceType":"module"}