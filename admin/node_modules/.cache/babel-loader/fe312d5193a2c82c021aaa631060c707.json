{"ast":null,"code":"var _jsxFileName = \"/Users/mac/dev/E-Commerce-Admin-React/src/tag/tagModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal, Form, Col } from 'react-bootstrap';\nimport { addTag, updateTag } from './../services/tagService';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TagModal = props => {\n  _s();\n\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  const handleCloseSnack = () => {\n    setSnackBarOpen(false);\n  };\n\n  const [validated, setValidated] = useState(false);\n  const [tagName, setTagName] = useState('');\n  const [dbError, setDbError] = useState(false);\n  const [isActive, setIsActive] = useState(null);\n  const [tagId, setTagId] = useState(null);\n\n  const setField = value => {\n    // console.log(value)\n    setTagName(value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === true) {\n      setValidated(true);\n\n      if (!props.isEdit) {\n        const addTagResponse = await addTag(tagName, true);\n\n        if (addTagResponse) {\n          setSnackBarOpen(true);\n          setDbError(false);\n          setTimeout(() => {\n            props.onHide();\n          }, 100);\n        } else {\n          setDbError(true);\n        }\n      } else {\n        const data = {\n          tag: tagName,\n          isActive: isActive,\n          _id: tagId\n        }; // console.log(data)\n\n        const updateTagResponse = await updateTag(data);\n\n        if (updateTagResponse) {\n          setSnackBarOpen(true);\n          props.onSave();\n        } else {\n          setDbError(true);\n        }\n      }\n    }\n\n    setValidated(true);\n  };\n\n  useEffect(() => {\n    if (props.isEdit) {\n      // console.log('-----------------',props.editTag)\n      setTagName(props.editTag.tag);\n      setIsActive(props.editTag.isActive);\n      setTagId(props.editTag._id);\n    } else {\n      setTagName('');\n      setValidated(false);\n      setSnackBarOpen(false);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      centered: true,\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          validated: validated,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Tag Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                value: tagName,\n                type: \"text\",\n                onChange: e => setField(e.target.value),\n                placeholder: \"Enter Tag Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please enter the tag name.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), props.isEdit && /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              checked: isActive === true,\n              type: \"radio\",\n              label: \"Active\",\n              name: \"formHorizontalRadios\",\n              onClick: () => setIsActive(true),\n              id: \"formHorizontalRadios1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              checked: isActive === false,\n              type: \"radio\",\n              label: \"InActive\",\n              onClick: () => setIsActive(false),\n              name: \"formHorizontalRadios\",\n              id: \"formHorizontalRadios2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: [\" \", props.isEdit ? 'Update' : 'Save']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [dbError && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: [\"Cannot \", props.isEdit ? 'Update' : 'Save', \" data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            props.onHide();\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackBarOpen,\n      message: props.isEdit ? \"Successfully Updated\" : \"Successfully Added\",\n      autoHideDuration: 2000,\n      onClose: handleCloseSnack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TagModal, \"55dY+MBpNDS+xIXUksotfMV4z1o=\");\n\n_c = TagModal;\nexport default TagModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagModal\");","map":{"version":3,"sources":["/Users/mac/dev/E-Commerce-Admin-React/src/tag/tagModal.js"],"names":["React","useState","useEffect","Button","Modal","Form","Col","addTag","updateTag","Snackbar","TagModal","props","snackBarOpen","setSnackBarOpen","handleCloseSnack","validated","setValidated","tagName","setTagName","dbError","setDbError","isActive","setIsActive","tagId","setTagId","setField","value","handleSubmit","e","preventDefault","form","currentTarget","checkValidity","isEdit","addTagResponse","setTimeout","onHide","data","tag","_id","updateTagResponse","onSave","editTag","target","color"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect} from 'react'\nimport { Button, Modal, Form, Col } from 'react-bootstrap'\nimport {addTag,updateTag} from './../services/tagService'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nexport const TagModal = (props) => {\n    const [snackBarOpen,setSnackBarOpen] = useState(false)\n    const handleCloseSnack=()=>{\n        setSnackBarOpen(false)\n    }\n    const [validated, setValidated] = useState(false)\n    const [tagName,setTagName]=useState('')\n    const [dbError,setDbError]= useState(false)\n    const [isActive,setIsActive]= useState(null)\n    const [tagId,setTagId]=useState(null)\n    const setField =(value)=>{\n        // console.log(value)\n        setTagName(\n            value\n        )\n    }\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        if (form.checkValidity() === true){\n            setValidated(true)\n            if(!props.isEdit){\n                const addTagResponse = await addTag(tagName,true)\n                if(addTagResponse){\n                    \n                    setSnackBarOpen(true)\n                    setDbError(false)\n                   setTimeout(() => {\n                    props.onHide()\n                   }, 100);\n                }\n                else{\n                    setDbError(true)\n                }\n            }\n            else{\n                const data = {\n                    tag:tagName,\n                    isActive:isActive,\n                    _id:tagId\n                }\n                // console.log(data)\n                const updateTagResponse = await updateTag(data)\n                if(updateTagResponse){\n                    \n                    setSnackBarOpen(true)\n                    props.onSave()               \n                }\n                else{\n                    setDbError(true)\n                }\n            }\n           \n        }\n        \n        setValidated(true)\n       \n    }\n    useEffect(()=>{\n        if(props.isEdit){\n            // console.log('-----------------',props.editTag)\n            setTagName(props.editTag.tag)\n            setIsActive(props.editTag.isActive)\n            setTagId(props.editTag._id)\n        }\n        else{\n            setTagName('')\n            setValidated(false)\n            setSnackBarOpen(false)\n            \n        }\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[props])\n    return (\n        <div>\n\n            <Modal centered  {...props} >\n                <Modal.Header closeButton>\n                    Add Category\n        </Modal.Header>\n                <Modal.Body>\n                    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                        <Form.Row>\n                            <Form.Group as={Col} >\n                                <Form.Label>Tag Name</Form.Label>\n                                <Form.Control required value={tagName} type=\"text\"  onChange={(e) => setField( e.target.value)} placeholder=\"Enter Tag Name\" />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please enter the tag name.\n            </Form.Control.Feedback>\n                            </Form.Group>\n                        </Form.Row>\n                     \n                    {props.isEdit  &&\n                            \n                            <Form.Group as={Col} >\n                                <Form.Check \n                                 checked={isActive === true}\n                                    type=\"radio\"\n                                    label=\"Active\"\n                                    name=\"formHorizontalRadios\"\n                                     onClick={() => setIsActive(true)}\n                                    id=\"formHorizontalRadios1\"\n                                />\n                                <Form.Check \n                                  checked={isActive === false}\n                                    type=\"radio\"\n                                    label=\"InActive\"\n                                    onClick={() => setIsActive(false)}\n                                    name=\"formHorizontalRadios\"\n                                    id=\"formHorizontalRadios2\"\n                                />\n                            \n                        </Form.Group>\n                           }\n                              <Button type='submit'> {props.isEdit ? 'Update' : 'Save'}</Button>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                  {dbError &&   <p style={{color:'red'}}>Cannot { props.isEdit ? 'Update' : 'Save'} data</p>}\n\n                    {/* <Button onClick={() => { view() }}>View</Button> */}\n                    <Button onClick={() => {\n                        props.onHide()\n\n                    }}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n            <Snackbar open={snackBarOpen} message={props.isEdit?\"Successfully Updated\":\"Successfully Added\"} \n            autoHideDuration={2000} onClose={handleCloseSnack}>\n       \n       </Snackbar>\n        </div>\n    )\n}\nexport default TagModal"]},"metadata":{},"sourceType":"module"}