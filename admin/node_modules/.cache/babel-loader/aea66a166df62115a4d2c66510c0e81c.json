{"ast":null,"code":"var _jsxFileName = \"/Users/mac/dev/E-Commerce-Admin-React/src/tag/tagList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MaterialTable from 'material-table';\nimport { getAllTag, deleteTag } from './../services/tagService';\nimport { Spinner, Button } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport TagModal from './tagModal';\nimport NavBar from '../components/navBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TagList = props => {\n  _s();\n\n  const [tag, SetTag] = useState(null);\n  const [modalShow, setModalShow] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [editTag, setEditTag] = useState([]);\n  const [dbError, setDbError] = useState(false);\n\n  const getTag = async () => {\n    const data = await getAllTag(); // console.log(data)\n\n    if (data) {\n      SetTag(data);\n    } else {\n      setDbError(true);\n    }\n  };\n\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  const handleCloseSnack = () => {\n    setSnackBarOpen(false);\n  };\n\n  const open = () => {\n    setModalShow(true);\n  };\n\n  const modalClose = () => {\n    getTag();\n    setModalShow(false);\n    setTimeout(() => {\n      setIsEdit(false);\n    }, 1500);\n  };\n\n  const onSave = () => {\n    getTag();\n    setModalShow(false);\n    setTimeout(() => {\n      setIsEdit(false);\n    }, 1500);\n  };\n\n  const editActive = data => {\n    setEditTag(data);\n    setIsEdit(true);\n    setModalShow(true);\n  };\n\n  const columns = [{\n    title: \"Tag Name\",\n    field: 'tag'\n  }, {\n    title: \"Is Active\",\n    field: 'isActive',\n    render: rowData => {\n      if (rowData.isActive) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green',\n            fontWeight: \"bolder\"\n          },\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red',\n            fontWeight: \"bolder\"\n          },\n          children: \"InActive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this);\n      }\n    }\n  }];\n  useEffect(() => {\n    getTag();\n    setSnackBarOpen(false); // eslint-disable-next-line react-hooks/exhaustive-deps      \n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), tag ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          open();\n        },\n        children: \"Add Tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MaterialTable, {\n        title: \"Tag\",\n        columns: columns,\n        data: tag,\n        style: {\n          margin: '0 490px'\n        },\n        actions: [{\n          icon: 'edit',\n          tooltip: 'Edit Tag',\n          onClick: async (event, rowData) => {\n            editActive(rowData);\n          }\n        }],\n        editable: {\n          onRowDelete: selectedRow => new Promise(async (resolve, reject) => {\n            const id = selectedRow._id;\n            const data = await deleteTag(id);\n\n            if (data) {\n              setSnackBarOpen(true);\n              getTag();\n              resolve();\n            }\n          })\n        },\n        options: {\n          actionsColumnIndex: -1,\n          showFirstLastPageButtons: false,\n          pageSizeOptions: [5, 10, 20, 50]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TagModal, {\n        show: modalShow,\n        onHide: () => {\n          modalClose();\n        },\n        editTag: editTag,\n        isEdit: isEdit,\n        onSave: onSave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackBarOpen,\n        message: \"Successfully Deleted\",\n        autoHideDuration: 2000,\n        onClose: handleCloseSnack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this) : dbError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '100px',\n        marginTop: '300px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          display: 'block',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          textAlign: 'center'\n        },\n        children: [\"Looks like Server Down!!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/tags\",\n          children: \"Try Reloading the page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '100px',\n        marginTop: '300px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        style: {\n          display: 'block',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          height: '50px',\n          width: '50px'\n        },\n        animation: \"border\",\n        variant: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          display: 'block',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          textAlign: 'center'\n        },\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TagList, \"iC249zobowc36FhktdiebKDqyq4=\");\n\n_c = TagList;\nexport default TagList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagList\");","map":{"version":3,"sources":["/Users/mac/dev/E-Commerce-Admin-React/src/tag/tagList.js"],"names":["React","useEffect","useState","MaterialTable","getAllTag","deleteTag","Spinner","Button","Snackbar","TagModal","NavBar","TagList","props","tag","SetTag","modalShow","setModalShow","isEdit","setIsEdit","editTag","setEditTag","dbError","setDbError","getTag","data","snackBarOpen","setSnackBarOpen","handleCloseSnack","open","modalClose","setTimeout","onSave","editActive","columns","title","field","render","rowData","isActive","color","fontWeight","margin","icon","tooltip","onClick","event","onRowDelete","selectedRow","Promise","resolve","reject","id","_id","actionsColumnIndex","showFirstLastPageButtons","pageSizeOptions","width","height","marginTop","display","marginLeft","marginRight","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table'\nimport { getAllTag, deleteTag } from './../services/tagService'\nimport { Spinner, Button } from 'react-bootstrap'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport TagModal from './tagModal'\nimport NavBar from '../components/navBar'\nexport const TagList = (props) => {\n    const [tag, SetTag] = useState(null)\n    const [modalShow, setModalShow] = useState(false)\n    const [isEdit, setIsEdit] = useState(false)\n    const [editTag, setEditTag] = useState([])\n    const [dbError, setDbError] = useState(false)\n    const getTag = async () => {\n        const data = await getAllTag()\n        // console.log(data)\n        if (data) {\n            SetTag(data)\n        }\n        else {\n            setDbError(true)\n        }\n    }\n    const [snackBarOpen, setSnackBarOpen] = useState(false)\n    const handleCloseSnack = () => {\n        setSnackBarOpen(false)\n    }\n    const open = () => {\n        setModalShow(true)\n    }\n    const modalClose = () => {\n        getTag()\n        setModalShow(false)\n        setTimeout(() => {\n            setIsEdit(false)\n        }, 1500);\n    }\n    const onSave = () => {\n        getTag()\n        setModalShow(false)\n        setTimeout(() => {\n            setIsEdit(false)\n        }, 1500);\n    }\n    const editActive = (data) => {\n        setEditTag(data)\n        setIsEdit(true)\n        setModalShow(true)\n    }\n    const columns = [\n        { title: \"Tag Name\", field: 'tag' },\n        {\n            title: \"Is Active\", field: 'isActive',\n            render: rowData => {\n                if (rowData.isActive) {\n                    return (\n                        <p style={{ color: 'green', fontWeight: \"bolder\" }}>Active</p>\n                    )\n                }\n                else {\n                    return (\n                        <p style={{ color: 'red', fontWeight: \"bolder\" }}>InActive</p>\n                    )\n                }\n            }\n        },\n    ]\n    useEffect(() => {\n        getTag()\n        setSnackBarOpen(false)\n        // eslint-disable-next-line react-hooks/exhaustive-deps      \n    }, [])\n    return (\n        <div>\n            <NavBar></NavBar>\n            {tag ?\n                <div style={{ margin: '30px' }}>\n                    <Button onClick={() => { open() }}>Add Tag</Button>\n                    <MaterialTable title=\"Tag\" columns={columns} data={tag} style={{ margin: '0 490px' }}\n                        actions={[\n                            {\n                                icon: 'edit',\n                                tooltip: 'Edit Tag',\n                                onClick: async (event, rowData) => {\n                                    editActive(rowData)\n                                }\n                            }\n                        ]}\n                        editable={{\n                            onRowDelete: selectedRow => new Promise(async (resolve, reject) => {\n                                const id = selectedRow._id\n                                const data = await deleteTag(id)\n                                if (data) {\n                                    setSnackBarOpen(true)\n                                    getTag()\n                                    resolve()\n                                }\n                            }),\n                        }}\n                        options={{\n                            actionsColumnIndex: -1,\n                            showFirstLastPageButtons: false,\n                            pageSizeOptions: [5, 10, 20, 50]\n                        }}\n                    ></MaterialTable>\n                    <TagModal\n                        show={modalShow}\n                        onHide={() => {\n                            modalClose()\n                        }}\n                        editTag={editTag}\n                        isEdit={isEdit}\n                        onSave={onSave}\n                    ></TagModal>\n                    <Snackbar open={snackBarOpen} message=\"Successfully Deleted\"\n                        autoHideDuration={2000} onClose={handleCloseSnack}>\n                    </Snackbar>\n                </div>\n                : dbError ?\n                    <div style={{ width: '100%', height: '100px', marginTop: '300px' }} >\n\n                        <p style={{\n                            display: 'block', marginLeft: 'auto',\n                            marginRight: 'auto', textAlign: 'center'\n                        }}>Looks like Server Down!!\n   <br /><a href=\"/tags\">\n                                Try Reloading the page\n</a></p>\n                    </div>\n                    :\n                    <div style={{ width: '100%', height: '100px', marginTop: '300px' }} >\n                        <Spinner style={{\n                            display: 'block', marginLeft: 'auto',\n                            marginRight: 'auto', height: '50px', width: '50px'\n                        }} animation=\"border\" variant=\"primary\" />\n                        <p style={{\n                            display: 'block', marginLeft: 'auto',\n                            marginRight: 'auto', textAlign: 'center'\n                        }}>Loading</p>\n                    </div>\n            }\n        </div>\n    )\n}\nexport default TagList"]},"metadata":{},"sourceType":"module"}